"""Initial migration

Revision ID: 0700a55e210d
Revises: 
Create Date: 2025-07-29 04:30:51.156631

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0700a55e210d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('repository_url', sa.String(length=500), nullable=True),
    sa.Column('project_type', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('framework', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('ai_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recommendation_type', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('suggested_fix', sa.Text(), nullable=True),
    sa.Column('code_snippet', sa.Text(), nullable=True),
    sa.Column('fixed_code_snippet', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('ai_model_used', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ai_recommendations_id'), 'ai_recommendations', ['id'], unique=False)
    op.create_table('analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('analysis_metadata', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analyses_id'), 'analyses', ['id'], unique=False)
    op.create_table('code_quality_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('maintainability_index', sa.Float(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('duplication_percentage', sa.Float(), nullable=True),
    sa.Column('test_coverage_percentage', sa.Float(), nullable=True),
    sa.Column('lines_of_code', sa.Integer(), nullable=True),
    sa.Column('technical_debt_minutes', sa.Integer(), nullable=True),
    sa.Column('code_smells_count', sa.Integer(), nullable=True),
    sa.Column('bug_count', sa.Integer(), nullable=True),
    sa.Column('vulnerability_count', sa.Integer(), nullable=True),
    sa.Column('quality_gate_status', sa.String(length=50), nullable=True),
    sa.Column('detailed_metrics', sa.JSON(), nullable=True),
    sa.Column('ai_suggestions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_quality_reports_id'), 'code_quality_reports', ['id'], unique=False)
    op.create_table('security_scans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scan_type', sa.String(length=50), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('findings_count', sa.Integer(), nullable=True),
    sa.Column('high_severity_count', sa.Integer(), nullable=True),
    sa.Column('medium_severity_count', sa.Integer(), nullable=True),
    sa.Column('low_severity_count', sa.Integer(), nullable=True),
    sa.Column('findings', sa.JSON(), nullable=True),
    sa.Column('scan_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_scans_id'), 'security_scans', ['id'], unique=False)
    op.create_table('test_generation_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_type', sa.String(length=50), nullable=True),
    sa.Column('framework', sa.String(length=50), nullable=True),
    sa.Column('generated_tests_count', sa.Integer(), nullable=True),
    sa.Column('coverage_improvement', sa.Float(), nullable=True),
    sa.Column('test_files_created', sa.JSON(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('generation_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_generation_results_id'), 'test_generation_results', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_generation_results_id'), table_name='test_generation_results')
    op.drop_table('test_generation_results')
    op.drop_index(op.f('ix_security_scans_id'), table_name='security_scans')
    op.drop_table('security_scans')
    op.drop_index(op.f('ix_code_quality_reports_id'), table_name='code_quality_reports')
    op.drop_table('code_quality_reports')
    op.drop_index(op.f('ix_analyses_id'), table_name='analyses')
    op.drop_table('analyses')
    op.drop_index(op.f('ix_ai_recommendations_id'), table_name='ai_recommendations')
    op.drop_table('ai_recommendations')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
