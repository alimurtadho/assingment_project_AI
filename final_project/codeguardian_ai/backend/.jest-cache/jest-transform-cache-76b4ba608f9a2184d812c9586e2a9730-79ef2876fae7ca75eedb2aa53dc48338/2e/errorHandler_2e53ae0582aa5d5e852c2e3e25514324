158b2d46362a8994e44f5d97ac5b8c64
/* istanbul ignore next */
"use strict";

function cov_frvuyck2f() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/errorHandler.js";
  var hash = "4d61d95eff5965244b2248c5f0f61e6aa27cef8e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/errorHandler.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 26
        },
        end: {
          line: 2,
          column: 56
        }
      },
      "1": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "4": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "5": {
        start: {
          line: 17,
          column: 56
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "6": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 20,
          column: 8
        }
      },
      "7": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "8": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 27,
          column: 8
        }
      },
      "9": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "10": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 33,
          column: 8
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "12": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 40,
          column: 8
        }
      },
      "13": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "14": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 46,
          column: 8
        }
      },
      "15": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "16": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 53,
          column: 8
        }
      },
      "17": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "18": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 59,
          column: 8
        }
      },
      "19": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "20": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 66,
          column: 8
        }
      },
      "21": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 58
        }
      },
      "22": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "23": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "24": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "25": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "26": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "27": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 49
          },
          end: {
            line: 80,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 52
          }
        },
        loc: {
          start: {
            line: 17,
            column: 56
          },
          end: {
            line: 17,
            column: 65
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 83,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        loc: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 87,
            column: 3
          }
        },
        line: 83
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 12
          }
        },
        loc: {
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 84
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 2
          },
          end: {
            line: 90,
            column: 3
          }
        },
        loc: {
          start: {
            line: 90,
            column: 35
          },
          end: {
            line: 97,
            column: 3
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 51
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 20
          }
        }, {
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 51
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 37
          }
        }, {
          start: {
            line: 70,
            column: 41
          },
          end: {
            line: 70,
            column: 51
          }
        }, {
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 58
          }
        }],
        line: 70
      },
      "11": {
        loc: {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 73,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 31
          }
        }, {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 19
          }
        }],
        line: 71
      },
      "12": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 77,
            column: 58
          }
        }, {
          start: {
            line: 77,
            column: 61
          },
          end: {
            line: 77,
            column: 65
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4d61d95eff5965244b2248c5f0f61e6aa27cef8e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_frvuyck2f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_frvuyck2f();
// Backend Utilities - Error Handler
const ResponseFormatter =
/* istanbul ignore next */
(cov_frvuyck2f().s[0]++, require('./responseFormatter'));
const Logger =
/* istanbul ignore next */
(cov_frvuyck2f().s[1]++, require('./logger'));
class ErrorHandler {
  // Global error handler middleware
  static globalErrorHandler(err, req, res, next) {
    /* istanbul ignore next */
    cov_frvuyck2f().f[0]++;
    cov_frvuyck2f().s[2]++;
    Logger.error('Global error caught', err, {
      url: req.originalUrl,
      method: req.method,
      ip: req.ip,
      userAgent: req.get('User-Agent')
    });

    // Mongoose validation errors
    /* istanbul ignore next */
    cov_frvuyck2f().s[3]++;
    if (err.name === 'ValidationError') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[0][0]++;
      const errors =
      /* istanbul ignore next */
      (cov_frvuyck2f().s[4]++, Object.values(err.errors).map(e => {
        /* istanbul ignore next */
        cov_frvuyck2f().f[1]++;
        cov_frvuyck2f().s[5]++;
        return e.message;
      }));
      /* istanbul ignore next */
      cov_frvuyck2f().s[6]++;
      return res.status(400).json(ResponseFormatter.error('Validation Error', 400, errors));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[0][1]++;
    }

    // JWT errors
    cov_frvuyck2f().s[7]++;
    if (err.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[1][0]++;
      cov_frvuyck2f().s[8]++;
      return res.status(401).json(ResponseFormatter.error('Invalid token', 401));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[1][1]++;
    }
    cov_frvuyck2f().s[9]++;
    if (err.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[2][0]++;
      cov_frvuyck2f().s[10]++;
      return res.status(401).json(ResponseFormatter.error('Token expired', 401));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[2][1]++;
    }

    // Multer errors (file upload)
    cov_frvuyck2f().s[11]++;
    if (err.code === 'LIMIT_FILE_SIZE') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[3][0]++;
      cov_frvuyck2f().s[12]++;
      return res.status(400).json(ResponseFormatter.error('File too large', 400, 'Maximum file size is 5MB'));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[3][1]++;
    }
    cov_frvuyck2f().s[13]++;
    if (err.code === 'LIMIT_UNEXPECTED_FILE') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[4][0]++;
      cov_frvuyck2f().s[14]++;
      return res.status(400).json(ResponseFormatter.error('Unexpected file field', 400));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[4][1]++;
    }

    // OpenAI API errors
    cov_frvuyck2f().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_frvuyck2f().b[6][0]++, err.response) &&
    /* istanbul ignore next */
    (cov_frvuyck2f().b[6][1]++, err.response.status === 401)) {
      /* istanbul ignore next */
      cov_frvuyck2f().b[5][0]++;
      cov_frvuyck2f().s[16]++;
      return res.status(500).json(ResponseFormatter.error('AI service configuration error', 500));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[5][1]++;
    }
    cov_frvuyck2f().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_frvuyck2f().b[8][0]++, err.response) &&
    /* istanbul ignore next */
    (cov_frvuyck2f().b[8][1]++, err.response.status === 429)) {
      /* istanbul ignore next */
      cov_frvuyck2f().b[7][0]++;
      cov_frvuyck2f().s[18]++;
      return res.status(429).json(ResponseFormatter.error('AI service rate limit exceeded', 429));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[7][1]++;
    }

    // Database errors
    cov_frvuyck2f().s[19]++;
    if (err.code === 'P2002') {
      /* istanbul ignore next */
      cov_frvuyck2f().b[9][0]++;
      cov_frvuyck2f().s[20]++;
      // Prisma unique constraint
      return res.status(409).json(ResponseFormatter.error('Resource already exists', 409));
    } else
    /* istanbul ignore next */
    {
      cov_frvuyck2f().b[9][1]++;
    }

    // Default error
    const statusCode =
    /* istanbul ignore next */
    (cov_frvuyck2f().s[21]++,
    /* istanbul ignore next */
    (cov_frvuyck2f().b[10][0]++, err.statusCode) ||
    /* istanbul ignore next */
    (cov_frvuyck2f().b[10][1]++, err.status) ||
    /* istanbul ignore next */
    (cov_frvuyck2f().b[10][2]++, 500));
    const message =
    /* istanbul ignore next */
    (cov_frvuyck2f().s[22]++, process.env.NODE_ENV === 'production' ?
    /* istanbul ignore next */
    (cov_frvuyck2f().b[11][0]++, 'Internal server error') :
    /* istanbul ignore next */
    (cov_frvuyck2f().b[11][1]++, err.message));
    /* istanbul ignore next */
    cov_frvuyck2f().s[23]++;
    res.status(statusCode).json(ResponseFormatter.error(message, statusCode, process.env.NODE_ENV === 'development' ?
    /* istanbul ignore next */
    (cov_frvuyck2f().b[12][0]++, err.stack) :
    /* istanbul ignore next */
    (cov_frvuyck2f().b[12][1]++, null)));
  }

  // Async error wrapper
  static asyncWrapper(fn) {
    /* istanbul ignore next */
    cov_frvuyck2f().f[2]++;
    cov_frvuyck2f().s[24]++;
    return (req, res, next) => {
      /* istanbul ignore next */
      cov_frvuyck2f().f[3]++;
      cov_frvuyck2f().s[25]++;
      Promise.resolve(fn(req, res, next)).catch(next);
    };
  }

  // 404 handler
  static notFoundHandler(req, res) {
    /* istanbul ignore next */
    cov_frvuyck2f().f[4]++;
    cov_frvuyck2f().s[26]++;
    res.status(404).json(ResponseFormatter.error(`Route ${req.originalUrl} not found`, 404));
  }
}
/* istanbul ignore next */
cov_frvuyck2f().s[27]++;
module.exports = ErrorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,