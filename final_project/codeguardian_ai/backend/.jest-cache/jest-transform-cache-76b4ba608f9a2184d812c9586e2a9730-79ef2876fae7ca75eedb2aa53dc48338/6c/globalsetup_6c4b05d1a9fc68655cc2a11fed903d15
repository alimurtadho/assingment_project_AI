e6f8a35dcb209e2b175396245fa808fc
"use strict";

/**
 * Global Test Setup
 * Runs once before all tests
 */

module.exports = async () => {
  // Set environment variables for testing
  process.env.NODE_ENV = 'test';
  process.env.PORT = '0'; // Use random port
  process.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/codeguardian_test';
  process.env.OPENAI_API_KEY = 'test-api-key-mock';
  process.env.JWT_SECRET = 'test-jwt-secret-for-testing';
  process.env.SESSION_SECRET = 'test-session-secret';
  process.env.LOG_LEVEL = 'error'; // Reduce log noise

  // Set up test database if needed
  try {
    // Here you would set up your test database
    // For now, we'll just log that we're starting tests
    console.log('üß™ Setting up test environment...');

    // You could add database setup here:
    // await setupTestDatabase();

    console.log('‚úÖ Test environment ready');
  } catch (error) {
    console.error('‚ùå Failed to set up test environment:', error);
    throw error;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiUE9SVCIsIkRBVEFCQVNFX1VSTCIsIk9QRU5BSV9BUElfS0VZIiwiSldUX1NFQ1JFVCIsIlNFU1NJT05fU0VDUkVUIiwiTE9HX0xFVkVMIiwiY29uc29sZSIsImxvZyIsImVycm9yIl0sInNvdXJjZXMiOlsiZ2xvYmFsLXNldHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2xvYmFsIFRlc3QgU2V0dXBcbiAqIFJ1bnMgb25jZSBiZWZvcmUgYWxsIHRlc3RzXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gU2V0IGVudmlyb25tZW50IHZhcmlhYmxlcyBmb3IgdGVzdGluZ1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnO1xuICAgIHByb2Nlc3MuZW52LlBPUlQgPSAnMCc7IC8vIFVzZSByYW5kb20gcG9ydFxuICAgIHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCA9ICdwb3N0Z3Jlc3FsOi8vdGVzdDp0ZXN0QGxvY2FsaG9zdDo1NDMyL2NvZGVndWFyZGlhbl90ZXN0JztcbiAgICBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSA9ICd0ZXN0LWFwaS1rZXktbW9jayc7XG4gICAgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCA9ICd0ZXN0LWp3dC1zZWNyZXQtZm9yLXRlc3RpbmcnO1xuICAgIHByb2Nlc3MuZW52LlNFU1NJT05fU0VDUkVUID0gJ3Rlc3Qtc2Vzc2lvbi1zZWNyZXQnO1xuICAgIHByb2Nlc3MuZW52LkxPR19MRVZFTCA9ICdlcnJvcic7IC8vIFJlZHVjZSBsb2cgbm9pc2VcbiAgICBcbiAgICAvLyBTZXQgdXAgdGVzdCBkYXRhYmFzZSBpZiBuZWVkZWRcbiAgICB0cnkge1xuICAgICAgICAvLyBIZXJlIHlvdSB3b3VsZCBzZXQgdXAgeW91ciB0ZXN0IGRhdGFiYXNlXG4gICAgICAgIC8vIEZvciBub3csIHdlJ2xsIGp1c3QgbG9nIHRoYXQgd2UncmUgc3RhcnRpbmcgdGVzdHNcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfp6ogU2V0dGluZyB1cCB0ZXN0IGVudmlyb25tZW50Li4uJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBZb3UgY291bGQgYWRkIGRhdGFiYXNlIHNldHVwIGhlcmU6XG4gICAgICAgIC8vIGF3YWl0IHNldHVwVGVzdERhdGFiYXNlKCk7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZygn4pyFIFRlc3QgZW52aXJvbm1lbnQgcmVhZHknKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgRmFpbGVkIHRvIHNldCB1cCB0ZXN0IGVudmlyb25tZW50OicsIGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFPLEdBQUcsWUFBWTtFQUN6QjtFQUNBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxHQUFHLE1BQU07RUFDN0JGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7RUFDeEJILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRyxZQUFZLEdBQUcseURBQXlEO0VBQ3BGSixPQUFPLENBQUNDLEdBQUcsQ0FBQ0ksY0FBYyxHQUFHLG1CQUFtQjtFQUNoREwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLFVBQVUsR0FBRyw2QkFBNkI7RUFDdEROLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTSxjQUFjLEdBQUcscUJBQXFCO0VBQ2xEUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ08sU0FBUyxHQUFHLE9BQU8sQ0FBQyxDQUFDOztFQUVqQztFQUNBLElBQUk7SUFDQTtJQUNBO0lBQ0FDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1DQUFtQyxDQUFDOztJQUVoRDtJQUNBOztJQUVBRCxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztFQUMzQyxDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFO0lBQ1pGLE9BQU8sQ0FBQ0UsS0FBSyxDQUFDLHNDQUFzQyxFQUFFQSxLQUFLLENBQUM7SUFDNUQsTUFBTUEsS0FBSztFQUNmO0FBQ0osQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==