{"version":3,"names":["cov_frvuyck2f","actualCoverage","ResponseFormatter","s","require","Logger","ErrorHandler","globalErrorHandler","err","req","res","next","f","error","url","originalUrl","method","ip","userAgent","get","name","b","errors","Object","values","map","e","message","status","json","code","response","statusCode","process","env","NODE_ENV","stack","asyncWrapper","fn","Promise","resolve","catch","notFoundHandler","module","exports"],"sources":["errorHandler.js"],"sourcesContent":["// Backend Utilities - Error Handler\nconst ResponseFormatter = require('./responseFormatter');\nconst Logger = require('./logger');\n\nclass ErrorHandler {\n  // Global error handler middleware\n  static globalErrorHandler(err, req, res, next) {\n    Logger.error('Global error caught', err, {\n      url: req.originalUrl,\n      method: req.method,\n      ip: req.ip,\n      userAgent: req.get('User-Agent')\n    });\n\n    // Mongoose validation errors\n    if (err.name === 'ValidationError') {\n      const errors = Object.values(err.errors).map(e => e.message);\n      return res.status(400).json(\n        ResponseFormatter.error('Validation Error', 400, errors)\n      );\n    }\n\n    // JWT errors\n    if (err.name === 'JsonWebTokenError') {\n      return res.status(401).json(\n        ResponseFormatter.error('Invalid token', 401)\n      );\n    }\n\n    if (err.name === 'TokenExpiredError') {\n      return res.status(401).json(\n        ResponseFormatter.error('Token expired', 401)\n      );\n    }\n\n    // Multer errors (file upload)\n    if (err.code === 'LIMIT_FILE_SIZE') {\n      return res.status(400).json(\n        ResponseFormatter.error('File too large', 400, 'Maximum file size is 5MB')\n      );\n    }\n\n    if (err.code === 'LIMIT_UNEXPECTED_FILE') {\n      return res.status(400).json(\n        ResponseFormatter.error('Unexpected file field', 400)\n      );\n    }\n\n    // OpenAI API errors\n    if (err.response && err.response.status === 401) {\n      return res.status(500).json(\n        ResponseFormatter.error('AI service configuration error', 500)\n      );\n    }\n\n    if (err.response && err.response.status === 429) {\n      return res.status(429).json(\n        ResponseFormatter.error('AI service rate limit exceeded', 429)\n      );\n    }\n\n    // Database errors\n    if (err.code === 'P2002') { // Prisma unique constraint\n      return res.status(409).json(\n        ResponseFormatter.error('Resource already exists', 409)\n      );\n    }\n\n    // Default error\n    const statusCode = err.statusCode || err.status || 500;\n    const message = process.env.NODE_ENV === 'production' \n      ? 'Internal server error' \n      : err.message;\n\n    res.status(statusCode).json(\n      ResponseFormatter.error(message, statusCode, \n        process.env.NODE_ENV === 'development' ? err.stack : null\n      )\n    );\n  }\n\n  // Async error wrapper\n  static asyncWrapper(fn) {\n    return (req, res, next) => {\n      Promise.resolve(fn(req, res, next)).catch(next);\n    };\n  }\n\n  // 404 handler\n  static notFoundHandler(req, res) {\n    res.status(404).json(\n      ResponseFormatter.error(\n        `Route ${req.originalUrl} not found`, \n        404\n      )\n    );\n  }\n}\n\nmodule.exports = ErrorHandler;\n"],"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","ignoreList":[]}