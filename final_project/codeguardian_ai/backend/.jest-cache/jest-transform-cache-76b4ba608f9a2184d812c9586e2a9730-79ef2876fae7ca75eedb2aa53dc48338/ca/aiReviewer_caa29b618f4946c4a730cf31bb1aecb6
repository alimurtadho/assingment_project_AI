d02a7356ff451b8bd9d67643f3fc95b4
/* istanbul ignore next */
"use strict";

function cov_1w1jsij0n3() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/aiReviewer.js";
  var hash = "c359f0e92e6c3083754b498ebbfd3b30cef15fc1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/aiReviewer.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "1": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 63
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "3": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "4": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "11": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "12": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 75
        }
      },
      "14": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "15": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "16": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 69
        }
      },
      "17": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 102
        }
      },
      "18": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 327,
          column: 6
        }
      },
      "19": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 334,
          column: 51
        }
      },
      "20": {
        start: {
          line: 335,
          column: 22
        },
        end: {
          line: 335,
          column: 32
        }
      },
      "21": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "22": {
        start: {
          line: 338,
          column: 6
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "23": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 49
        }
      },
      "24": {
        start: {
          line: 348,
          column: 21
        },
        end: {
          line: 348,
          column: 66
        }
      },
      "25": {
        start: {
          line: 351,
          column: 25
        },
        end: {
          line: 351,
          column: 66
        }
      },
      "26": {
        start: {
          line: 354,
          column: 27
        },
        end: {
          line: 354,
          column: 83
        }
      },
      "27": {
        start: {
          line: 357,
          column: 21
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "28": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "29": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 374,
          column: 90
        }
      },
      "30": {
        start: {
          line: 377,
          column: 6
        },
        end: {
          line: 377,
          column: 87
        }
      },
      "31": {
        start: {
          line: 379,
          column: 6
        },
        end: {
          line: 381,
          column: 7
        }
      },
      "32": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 91
        }
      },
      "33": {
        start: {
          line: 383,
          column: 6
        },
        end: {
          line: 387,
          column: 8
        }
      },
      "34": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "35": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 53
        }
      },
      "36": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 401,
          column: 5
        }
      },
      "37": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 64
        }
      },
      "38": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "39": {
        start: {
          line: 404,
          column: 6
        },
        end: {
          line: 404,
          column: 80
        }
      },
      "40": {
        start: {
          line: 412,
          column: 27
        },
        end: {
          line: 412,
          column: 51
        }
      },
      "41": {
        start: {
          line: 415,
          column: 22
        },
        end: {
          line: 415,
          column: 24
        }
      },
      "42": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 418,
          column: 5
        }
      },
      "43": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 417,
          column: 67
        }
      },
      "44": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 421,
          column: 5
        }
      },
      "45": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 420,
          column: 57
        }
      },
      "46": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "47": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 423,
          column: 66
        }
      },
      "48": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 435,
          column: 6
        }
      },
      "49": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "50": {
        start: {
          line: 444,
          column: 23
        },
        end: {
          line: 444,
          column: 24
        }
      },
      "51": {
        start: {
          line: 445,
          column: 6
        },
        end: {
          line: 469,
          column: 7
        }
      },
      "52": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 87
        }
      },
      "53": {
        start: {
          line: 448,
          column: 25
        },
        end: {
          line: 454,
          column: 10
        }
      },
      "54": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "55": {
        start: {
          line: 457,
          column: 10
        },
        end: {
          line: 457,
          column: 60
        }
      },
      "56": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 51
        }
      },
      "57": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 26
        }
      },
      "58": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 464,
          column: 90
        }
      },
      "59": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "60": {
        start: {
          line: 467,
          column: 10
        },
        end: {
          line: 467,
          column: 61
        }
      },
      "61": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 472,
          column: 20
        }
      },
      "62": {
        start: {
          line: 479,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "63": {
        start: {
          line: 480,
          column: 21
        },
        end: {
          line: 480,
          column: 41
        }
      },
      "64": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 483,
          column: 57
        }
      },
      "65": {
        start: {
          line: 486,
          column: 6
        },
        end: {
          line: 486,
          column: 60
        }
      },
      "66": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 83
        }
      },
      "67": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 490,
          column: 70
        }
      },
      "68": {
        start: {
          line: 498,
          column: 27
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "69": {
        start: {
          line: 505,
          column: 21
        },
        end: {
          line: 505,
          column: 76
        }
      },
      "70": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "71": {
        start: {
          line: 508,
          column: 6
        },
        end: {
          line: 510,
          column: 7
        }
      },
      "72": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 60
        }
      },
      "73": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 524,
          column: 5
        }
      },
      "74": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 523,
          column: 10
        }
      },
      "75": {
        start: {
          line: 520,
          column: 63
        },
        end: {
          line: 523,
          column: 7
        }
      },
      "76": {
        start: {
          line: 527,
          column: 4
        },
        end: {
          line: 529,
          column: 5
        }
      },
      "77": {
        start: {
          line: 528,
          column: 6
        },
        end: {
          line: 528,
          column: 76
        }
      },
      "78": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 532,
          column: 69
        }
      },
      "79": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 534,
          column: 20
        }
      },
      "80": {
        start: {
          line: 541,
          column: 20
        },
        end: {
          line: 541,
          column: 64
        }
      },
      "81": {
        start: {
          line: 542,
          column: 24
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "82": {
        start: {
          line: 543,
          column: 6
        },
        end: {
          line: 543,
          column: 50
        }
      },
      "83": {
        start: {
          line: 546,
          column: 4
        },
        end: {
          line: 546,
          column: 71
        }
      },
      "84": {
        start: {
          line: 553,
          column: 18
        },
        end: {
          line: 553,
          column: 20
        }
      },
      "85": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 567,
          column: 5
        }
      },
      "86": {
        start: {
          line: 557,
          column: 6
        },
        end: {
          line: 566,
          column: 11
        }
      },
      "87": {
        start: {
          line: 558,
          column: 25
        },
        end: {
          line: 558,
          column: 83
        }
      },
      "88": {
        start: {
          line: 560,
          column: 10
        },
        end: {
          line: 565,
          column: 13
        }
      },
      "89": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 580,
          column: 5
        }
      },
      "90": {
        start: {
          line: 571,
          column: 6
        },
        end: {
          line: 579,
          column: 11
        }
      },
      "91": {
        start: {
          line: 572,
          column: 30
        },
        end: {
          line: 572,
          column: 60
        }
      },
      "92": {
        start: {
          line: 574,
          column: 10
        },
        end: {
          line: 578,
          column: 13
        }
      },
      "93": {
        start: {
          line: 582,
          column: 4
        },
        end: {
          line: 582,
          column: 17
        }
      },
      "94": {
        start: {
          line: 589,
          column: 18
        },
        end: {
          line: 589,
          column: 34
        }
      },
      "95": {
        start: {
          line: 590,
          column: 26
        },
        end: {
          line: 590,
          column: 70
        }
      },
      "96": {
        start: {
          line: 590,
          column: 47
        },
        end: {
          line: 590,
          column: 69
        }
      },
      "97": {
        start: {
          line: 591,
          column: 25
        },
        end: {
          line: 595,
          column: 5
        }
      },
      "98": {
        start: {
          line: 592,
          column: 6
        },
        end: {
          line: 594,
          column: 34
        }
      },
      "99": {
        start: {
          line: 597,
          column: 4
        },
        end: {
          line: 605,
          column: 6
        }
      },
      "100": {
        start: {
          line: 603,
          column: 44
        },
        end: {
          line: 603,
          column: 61
        }
      },
      "101": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 612,
          column: 59
        }
      },
      "102": {
        start: {
          line: 612,
          column: 34
        },
        end: {
          line: 612,
          column: 57
        }
      },
      "103": {
        start: {
          line: 619,
          column: 20
        },
        end: {
          line: 619,
          column: 22
        }
      },
      "104": {
        start: {
          line: 620,
          column: 27
        },
        end: {
          line: 620,
          column: 37
        }
      },
      "105": {
        start: {
          line: 622,
          column: 4
        },
        end: {
          line: 622,
          column: 80
        }
      },
      "106": {
        start: {
          line: 624,
          column: 4
        },
        end: {
          line: 645,
          column: 5
        }
      },
      "107": {
        start: {
          line: 625,
          column: 6
        },
        end: {
          line: 644,
          column: 7
        }
      },
      "108": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 626,
          column: 99
        }
      },
      "109": {
        start: {
          line: 628,
          column: 23
        },
        end: {
          line: 631,
          column: 10
        }
      },
      "110": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 636,
          column: 11
        }
      },
      "111": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 639,
          column: 72
        }
      },
      "112": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 643,
          column: 11
        }
      },
      "113": {
        start: {
          line: 647,
          column: 24
        },
        end: {
          line: 655,
          column: 5
        }
      },
      "114": {
        start: {
          line: 651,
          column: 47
        },
        end: {
          line: 651,
          column: 55
        }
      },
      "115": {
        start: {
          line: 652,
          column: 43
        },
        end: {
          line: 652,
          column: 50
        }
      },
      "116": {
        start: {
          line: 657,
          column: 4
        },
        end: {
          line: 657,
          column: 73
        }
      },
      "117": {
        start: {
          line: 659,
          column: 4
        },
        end: {
          line: 659,
          column: 86
        }
      },
      "118": {
        start: {
          line: 663,
          column: 0
        },
        end: {
          line: 663,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 37,
            column: 3
          }
        },
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 3
          }
        },
        loc: {
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 328,
            column: 3
          }
        },
        line: 57
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 333,
            column: 2
          },
          end: {
            line: 333,
            column: 3
          }
        },
        loc: {
          start: {
            line: 333,
            column: 35
          },
          end: {
            line: 389,
            column: 3
          }
        },
        line: 333
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 394,
            column: 2
          },
          end: {
            line: 394,
            column: 3
          }
        },
        loc: {
          start: {
            line: 394,
            column: 40
          },
          end: {
            line: 406,
            column: 3
          }
        },
        line: 394
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 411,
            column: 2
          },
          end: {
            line: 411,
            column: 3
          }
        },
        loc: {
          start: {
            line: 411,
            column: 43
          },
          end: {
            line: 436,
            column: 3
          }
        },
        line: 411
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 441,
            column: 2
          },
          end: {
            line: 441,
            column: 3
          }
        },
        loc: {
          start: {
            line: 441,
            column: 41
          },
          end: {
            line: 473,
            column: 3
          }
        },
        line: 441
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 478,
            column: 2
          },
          end: {
            line: 478,
            column: 3
          }
        },
        loc: {
          start: {
            line: 478,
            column: 52
          },
          end: {
            line: 492,
            column: 3
          }
        },
        line: 478
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 497,
            column: 2
          },
          end: {
            line: 497,
            column: 3
          }
        },
        loc: {
          start: {
            line: 497,
            column: 50
          },
          end: {
            line: 512,
            column: 3
          }
        },
        line: 497
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 517,
            column: 2
          },
          end: {
            line: 517,
            column: 3
          }
        },
        loc: {
          start: {
            line: 517,
            column: 46
          },
          end: {
            line: 535,
            column: 3
          }
        },
        line: 517
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 520,
            column: 44
          },
          end: {
            line: 520,
            column: 45
          }
        },
        loc: {
          start: {
            line: 520,
            column: 63
          },
          end: {
            line: 523,
            column: 7
          }
        },
        line: 520
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 540,
            column: 2
          },
          end: {
            line: 540,
            column: 3
          }
        },
        loc: {
          start: {
            line: 540,
            column: 33
          },
          end: {
            line: 547,
            column: 3
          }
        },
        line: 540
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 542,
            column: 38
          },
          end: {
            line: 542,
            column: 39
          }
        },
        loc: {
          start: {
            line: 542,
            column: 54
          },
          end: {
            line: 544,
            column: 5
          }
        },
        line: 542
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 552,
            column: 2
          },
          end: {
            line: 552,
            column: 3
          }
        },
        loc: {
          start: {
            line: 552,
            column: 35
          },
          end: {
            line: 583,
            column: 3
          }
        },
        line: 552
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 558,
            column: 16
          },
          end: {
            line: 558,
            column: 17
          }
        },
        loc: {
          start: {
            line: 558,
            column: 25
          },
          end: {
            line: 558,
            column: 83
          }
        },
        line: 558
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 559,
            column: 17
          },
          end: {
            line: 559,
            column: 18
          }
        },
        loc: {
          start: {
            line: 559,
            column: 26
          },
          end: {
            line: 566,
            column: 9
          }
        },
        line: 559
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 572,
            column: 16
          },
          end: {
            line: 572,
            column: 17
          }
        },
        loc: {
          start: {
            line: 572,
            column: 30
          },
          end: {
            line: 572,
            column: 60
          }
        },
        line: 572
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 573,
            column: 17
          },
          end: {
            line: 573,
            column: 18
          }
        },
        loc: {
          start: {
            line: 573,
            column: 31
          },
          end: {
            line: 579,
            column: 9
          }
        },
        line: 573
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 588,
            column: 2
          },
          end: {
            line: 588,
            column: 3
          }
        },
        loc: {
          start: {
            line: 588,
            column: 27
          },
          end: {
            line: 606,
            column: 3
          }
        },
        line: 588
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 590,
            column: 39
          },
          end: {
            line: 590,
            column: 40
          }
        },
        loc: {
          start: {
            line: 590,
            column: 47
          },
          end: {
            line: 590,
            column: 69
          }
        },
        line: 590
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 591,
            column: 38
          },
          end: {
            line: 591,
            column: 39
          }
        },
        loc: {
          start: {
            line: 592,
            column: 6
          },
          end: {
            line: 594,
            column: 34
          }
        },
        line: 592
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 603,
            column: 29
          },
          end: {
            line: 603,
            column: 30
          }
        },
        loc: {
          start: {
            line: 603,
            column: 44
          },
          end: {
            line: 603,
            column: 61
          }
        },
        line: 603
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 611,
            column: 2
          },
          end: {
            line: 611,
            column: 3
          }
        },
        loc: {
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 613,
            column: 3
          }
        },
        line: 611
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 612,
            column: 23
          },
          end: {
            line: 612,
            column: 24
          }
        },
        loc: {
          start: {
            line: 612,
            column: 34
          },
          end: {
            line: 612,
            column: 57
          }
        },
        line: 612
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 618,
            column: 2
          },
          end: {
            line: 618,
            column: 3
          }
        },
        loc: {
          start: {
            line: 618,
            column: 41
          },
          end: {
            line: 660,
            column: 3
          }
        },
        line: 618
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 651,
            column: 42
          },
          end: {
            line: 651,
            column: 43
          }
        },
        loc: {
          start: {
            line: 651,
            column: 47
          },
          end: {
            line: 651,
            column: 55
          }
        },
        line: 651
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 652,
            column: 38
          },
          end: {
            line: 652,
            column: 39
          }
        },
        loc: {
          start: {
            line: 652,
            column: 43
          },
          end: {
            line: 652,
            column: 50
          }
        },
        line: 652
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 41,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 41,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 333,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 31
          },
          end: {
            line: 333,
            column: 33
          }
        }],
        line: 333
      },
      "2": {
        loc: {
          start: {
            line: 334,
            column: 23
          },
          end: {
            line: 334,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 23
          },
          end: {
            line: 334,
            column: 35
          }
        }, {
          start: {
            line: 334,
            column: 39
          },
          end: {
            line: 334,
            column: 51
          }
        }],
        line: 334
      },
      "3": {
        loc: {
          start: {
            line: 371,
            column: 21
          },
          end: {
            line: 371,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 21
          },
          end: {
            line: 371,
            column: 48
          }
        }, {
          start: {
            line: 371,
            column: 52
          },
          end: {
            line: 371,
            column: 53
          }
        }],
        line: 371
      },
      "4": {
        loc: {
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "5": {
        loc: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "6": {
        loc: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "7": {
        loc: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "8": {
        loc: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "9": {
        loc: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "10": {
        loc: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "11": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "12": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "13": {
        loc: {
          start: {
            line: 505,
            column: 21
          },
          end: {
            line: 505,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 21
          },
          end: {
            line: 505,
            column: 47
          }
        }, {
          start: {
            line: 505,
            column: 51
          },
          end: {
            line: 505,
            column: 76
          }
        }],
        line: 505
      },
      "14": {
        loc: {
          start: {
            line: 508,
            column: 6
          },
          end: {
            line: 510,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 6
          },
          end: {
            line: 510,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "15": {
        loc: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "16": {
        loc: {
          start: {
            line: 521,
            column: 12
          },
          end: {
            line: 521,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 12
          },
          end: {
            line: 521,
            column: 20
          }
        }, {
          start: {
            line: 521,
            column: 24
          },
          end: {
            line: 521,
            column: 54
          }
        }],
        line: 521
      },
      "17": {
        loc: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "18": {
        loc: {
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 543,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 543,
            column: 20
          },
          end: {
            line: 543,
            column: 43
          }
        }, {
          start: {
            line: 543,
            column: 47
          },
          end: {
            line: 543,
            column: 48
          }
        }],
        line: 543
      },
      "19": {
        loc: {
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 567,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "20": {
        loc: {
          start: {
            line: 558,
            column: 25
          },
          end: {
            line: 558,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 25
          },
          end: {
            line: 558,
            column: 50
          }
        }, {
          start: {
            line: 558,
            column: 54
          },
          end: {
            line: 558,
            column: 83
          }
        }],
        line: 558
      },
      "21": {
        loc: {
          start: {
            line: 563,
            column: 25
          },
          end: {
            line: 563,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 563,
            column: 25
          },
          end: {
            line: 563,
            column: 45
          }
        }, {
          start: {
            line: 563,
            column: 49
          },
          end: {
            line: 563,
            column: 66
          }
        }],
        line: 563
      },
      "22": {
        loc: {
          start: {
            line: 570,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "23": {
        loc: {
          start: {
            line: 592,
            column: 6
          },
          end: {
            line: 594,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 592,
            column: 6
          },
          end: {
            line: 592,
            column: 34
          }
        }, {
          start: {
            line: 593,
            column: 6
          },
          end: {
            line: 593,
            column: 33
          }
        }, {
          start: {
            line: 594,
            column: 6
          },
          end: {
            line: 594,
            column: 34
          }
        }],
        line: 592
      },
      "24": {
        loc: {
          start: {
            line: 618,
            column: 27
          },
          end: {
            line: 618,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 618,
            column: 37
          },
          end: {
            line: 618,
            column: 39
          }
        }],
        line: 618
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c359f0e92e6c3083754b498ebbfd3b30cef15fc1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1w1jsij0n3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w1jsij0n3();
/**
 * Enhanced AI Code Reviewer Service
 * Uses OpenAI GPT-4 to perform intelligent code review with improved architecture
 */

const OpenAI =
/* istanbul ignore next */
(cov_1w1jsij0n3().s[0]++, require('openai'));
const ResponseFormatter =
/* istanbul ignore next */
(cov_1w1jsij0n3().s[1]++, require('../utils/responseFormatter'));
const ValidationUtils =
/* istanbul ignore next */
(cov_1w1jsij0n3().s[2]++, require('../utils/validationUtils'));
const Logger =
/* istanbul ignore next */
(cov_1w1jsij0n3().s[3]++, require('../utils/logger'));
const ErrorHandler =
/* istanbul ignore next */
(cov_1w1jsij0n3().s[4]++, require('../utils/errorHandler'));
class AIReviewer {
  constructor() {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[0]++;
    cov_1w1jsij0n3().s[5]++;
    this.logger = Logger;
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[6]++;
    this.validationUtils = ValidationUtils;
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[7]++;
    this.responseFormatter = ResponseFormatter;

    // Initialize OpenAI with proper error handling
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[8]++;
    this.initializeOpenAI();

    // Enhanced prompts for different review types
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[9]++;
    this.prompts = this.initializePrompts();

    // Review configuration
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[10]++;
    this.config = {
      maxTokens: 4000,
      temperature: 0.1,
      model: 'gpt-4',
      retryAttempts: 3,
      retryDelay: 1000
    };
  }

  /**
   * Initialize OpenAI client with proper validation
   */
  initializeOpenAI() {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[1]++;
    cov_1w1jsij0n3().s[11]++;
    try {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[12]++;
      if (!process.env.OPENAI_API_KEY) {
        /* istanbul ignore next */
        cov_1w1jsij0n3().b[0][0]++;
        cov_1w1jsij0n3().s[13]++;
        throw new Error('OPENAI_API_KEY environment variable is required');
      } else
      /* istanbul ignore next */
      {
        cov_1w1jsij0n3().b[0][1]++;
      }
      cov_1w1jsij0n3().s[14]++;
      this.openai = new OpenAI({
        apiKey: process.env.OPENAI_API_KEY
      });
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[15]++;
      this.logger.info('OpenAI client initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[16]++;
      this.logger.error('Failed to initialize OpenAI client', error);
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[17]++;
      throw ErrorHandler.createError('OPENAI_INIT_FAILED', 'Failed to initialize OpenAI client', 500);
    }
  }

  /**
   * Initialize enhanced prompts for different review types
   */
  initializePrompts() {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[2]++;
    cov_1w1jsij0n3().s[18]++;
    return {
      codeReview: {
        system: `You are an expert software engineer conducting a comprehensive code review. 
Your analysis should be thorough, constructive, and actionable.`,
        user: `Analyze the provided code and identify:

1. **Code Quality Issues:**
   - Readability and maintainability concerns
   - Best practice violations
   - Code organization and structure
   - Naming conventions and clarity

2. **Performance Concerns:**
   - Algorithmic efficiency
   - Memory usage patterns
   - Database query optimization
   - Resource management

3. **Security Vulnerabilities:**
   - Input validation issues
   - Authentication/authorization gaps
   - Data exposure risks
   - Injection vulnerabilities

4. **Bug Potential:**
   - Logic errors and edge cases
   - Error handling gaps
   - Race conditions
   - Null pointer risks

5. **Design Pattern Violations:**
   - SOLID principles adherence
   - Appropriate pattern usage
   - Coupling and cohesion
   - Separation of concerns

6. **Testing Gaps:**
   - Test coverage assessment
   - Test quality evaluation
   - Missing test scenarios

For each issue, provide:
- Issue category and severity (CRITICAL/HIGH/MEDIUM/LOW)
- Specific line numbers or code blocks
- Clear problem description
- Actionable recommendations
- Code examples when helpful
- Estimated effort to fix

Respond in valid JSON format:
{
  "reviewSummary": {
    "overallScore": 1-10,
    "codeQuality": 1-10,
    "security": 1-10,
    "performance": 1-10,
    "maintainability": 1-10,
    "summary": "Brief overall assessment"
  },
  "issues": [
    {
      "id": "unique_id",
      "category": "Code Quality|Performance|Security|Bug Risk|Design|Testing",
      "severity": "CRITICAL|HIGH|MEDIUM|LOW",
      "title": "Brief issue title",
      "description": "Detailed description",
      "location": {
        "line": number,
        "function": "function_name",
        "file": "file_context"
      },
      "impact": "Description of potential impact",
      "recommendation": "Specific fix recommendation",
      "example": "Code example if applicable",
      "effort": "LOW|MEDIUM|HIGH",
      "tags": ["relevant", "tags"]
    }
  ],
  "strengths": [
    {
      "aspect": "What is done well",
      "description": "Why it's good"
    }
  ],
  "suggestions": [
    {
      "category": "General improvement area",
      "priority": "HIGH|MEDIUM|LOW",
      "description": "Improvement suggestion",
      "benefits": "Expected benefits"
    }
  ],
  "metrics": {
    "linesOfCode": number,
    "complexityScore": 1-10,
    "duplicatedCode": "percentage",
    "testCoverage": "estimated_percentage"
  }
}`
      },
      refactoring: {
        system: `You are an expert software architect providing refactoring recommendations.
Focus on improving code structure, maintainability, and adherence to best practices.`,
        user: `Analyze the code and provide specific refactoring suggestions:

1. **Structural Improvements:**
   - Code organization and modularity
   - Function and class decomposition
   - Dependency management

2. **Design Pattern Applications:**
   - Appropriate pattern recommendations
   - Anti-pattern elimination
   - Architecture improvements

3. **Code Optimization:**
   - Performance optimizations
   - Memory usage improvements
   - Algorithm enhancements

4. **Maintainability Enhancements:**
   - Code readability improvements
   - Documentation suggestions
   - Error handling enhancements

Provide specific refactoring steps with code examples.

Respond in JSON format:
{
  "refactoringPlan": {
    "priority": "HIGH|MEDIUM|LOW",
    "estimatedEffort": "hours_estimate",
    "overview": "High-level refactoring strategy"
  },
  "refactorings": [
    {
      "id": "unique_id",
      "type": "Extract Method|Extract Class|Rename|Move|Inline|etc",
      "priority": "HIGH|MEDIUM|LOW",
      "title": "Refactoring title",
      "description": "What to refactor and why",
      "currentCode": "Code before refactoring",
      "refactoredCode": "Code after refactoring",
      "benefits": ["List of benefits"],
      "effort": "hours_estimate",
      "dependencies": ["Other refactorings this depends on"]
    }
  ],
  "architecturalSuggestions": [
    {
      "area": "Architecture component",
      "suggestion": "Improvement recommendation",
      "reasoning": "Why this improvement is needed"
    }
  ]
}`
      },
      security: {
        system: `You are a cybersecurity expert conducting a security-focused code review.
Identify potential vulnerabilities and security best practice violations.`,
        user: `Perform a comprehensive security analysis:

1. **Vulnerability Assessment:**
   - Input validation issues
   - Authentication/authorization flaws
   - Data exposure risks
   - Injection vulnerabilities

2. **Security Best Practices:**
   - Secure coding practices
   - Error handling security
   - Logging security
   - Configuration security

3. **Compliance Considerations:**
   - OWASP Top 10 compliance
   - Industry standard adherence
   - Privacy requirements

Respond with specific security recommendations and remediation steps.

JSON format:
{
  "securityAssessment": {
    "overallRiskLevel": "CRITICAL|HIGH|MEDIUM|LOW",
    "vulnerabilityCount": number,
    "complianceScore": 1-10,
    "summary": "Security assessment summary"
  },
  "vulnerabilities": [
    {
      "id": "vuln_id",
      "type": "OWASP category",
      "severity": "CRITICAL|HIGH|MEDIUM|LOW",
      "title": "Vulnerability title",
      "description": "Detailed vulnerability description",
      "location": "Code location",
      "impact": "Potential impact description",
      "remediation": "Step-by-step fix",
      "references": ["CWE-XXX", "OWASP links"]
    }
  ],
  "recommendations": [
    {
      "category": "Security area",
      "priority": "HIGH|MEDIUM|LOW",
      "recommendation": "Security improvement",
      "implementation": "How to implement"
    }
  ]
}`
      },
      performance: {
        system: `You are a performance optimization expert analyzing code for efficiency improvements.`,
        user: `Analyze the code for performance optimization opportunities:

1. **Algorithm Efficiency:**
   - Time complexity analysis
   - Space complexity concerns
   - Algorithm choice validation

2. **Resource Management:**
   - Memory usage patterns
   - Database query efficiency
   - I/O optimization

3. **Scalability Concerns:**
   - Bottleneck identification
   - Concurrency issues
   - Load handling capacity

Provide actionable performance improvement recommendations.

JSON format:
{
  "performanceAssessment": {
    "overallScore": 1-10,
    "bottlenecks": number,
    "scalabilityScore": 1-10,
    "summary": "Performance assessment summary"
  },
  "optimizations": [
    {
      "id": "opt_id",
      "type": "Algorithm|Database|Memory|I/O|Concurrency",
      "priority": "HIGH|MEDIUM|LOW",
      "title": "Optimization title",
      "description": "Performance issue description",
      "currentComplexity": "Big O notation",
      "proposedComplexity": "Improved Big O",
      "expectedImprovement": "Performance gain description",
      "implementation": "How to implement the optimization",
      "tradeoffs": "Any trade-offs to consider"
    }
  ],
  "metrics": {
    "estimatedSpeedImprovement": "percentage",
    "memoryReduction": "percentage",
    "scalabilityImprovement": "description"
  }
}`
      }
    };
  }

  /**
   * Enhanced review method with retry logic and better error handling
   */
  async review(code, options =
  /* istanbul ignore next */
  (cov_1w1jsij0n3().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[3]++;
    const reviewType =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[19]++,
    /* istanbul ignore next */
    (cov_1w1jsij0n3().b[2][0]++, options.type) ||
    /* istanbul ignore next */
    (cov_1w1jsij0n3().b[2][1]++, 'codeReview'));
    const startTime =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[20]++, Date.now());
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[21]++;
    try {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[22]++;
      this.logger.info('Starting AI code review', {
        reviewType,
        codeLength: code.length,
        options
      });

      // Validate inputs
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[23]++;
      this.validateReviewInput(code, reviewType);

      // Prepare the review request
      const prompt =
      /* istanbul ignore next */
      (cov_1w1jsij0n3().s[24]++, this.preparePrompt(code, reviewType, options));

      // Execute review with retry logic
      const aiResponse =
      /* istanbul ignore next */
      (cov_1w1jsij0n3().s[25]++, await this.executeReviewWithRetry(prompt));

      // Process and validate the response
      const reviewResult =
      /* istanbul ignore next */
      (cov_1w1jsij0n3().s[26]++, await this.processReviewResponse(aiResponse, reviewType));

      // Add metadata
      const result =
      /* istanbul ignore next */
      (cov_1w1jsij0n3().s[27]++, {
        ...reviewResult,
        metadata: {
          reviewType,
          timestamp: new Date().toISOString(),
          processingTime: Date.now() - startTime,
          modelUsed: this.config.model,
          codeMetrics: this.analyzeCodeMetrics(code)
        }
      });
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[28]++;
      this.logger.info('AI code review completed', {
        reviewType,
        processingTime: result.metadata.processingTime,
        issuesFound:
        /* istanbul ignore next */
        (cov_1w1jsij0n3().b[3][0]++, reviewResult.issues?.length) ||
        /* istanbul ignore next */
        (cov_1w1jsij0n3().b[3][1]++, 0)
      });
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[29]++;
      return this.responseFormatter.success(result, 'Code review completed successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[30]++;
      this.logger.error('AI code review failed', {
        error: error.message,
        reviewType
      });
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[31]++;
      if (error.code === 'insufficient_quota') {
        /* istanbul ignore next */
        cov_1w1jsij0n3().b[4][0]++;
        cov_1w1jsij0n3().s[32]++;
        throw ErrorHandler.createError('QUOTA_EXCEEDED', 'AI service quota exceeded', 429);
      } else
      /* istanbul ignore next */
      {
        cov_1w1jsij0n3().b[4][1]++;
      }
      cov_1w1jsij0n3().s[33]++;
      throw ErrorHandler.createError('REVIEW_FAILED', `AI code review failed: ${error.message}`, 500);
    }
  }

  /**
   * Validate review input parameters
   */
  validateReviewInput(code, reviewType) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[4]++;
    cov_1w1jsij0n3().s[34]++;
    if (!this.validationUtils.validateCodeInput(code)) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[5][0]++;
      cov_1w1jsij0n3().s[35]++;
      throw new Error('Invalid code input provided');
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[5][1]++;
    }
    cov_1w1jsij0n3().s[36]++;
    if (!this.prompts[reviewType]) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[6][0]++;
      cov_1w1jsij0n3().s[37]++;
      throw new Error(`Unsupported review type: ${reviewType}`);
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[6][1]++;
    }
    cov_1w1jsij0n3().s[38]++;
    if (code.length > 50000) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[7][0]++;
      cov_1w1jsij0n3().s[39]++;
      this.logger.warn('Large code file detected', {
        codeLength: code.length
      });
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[7][1]++;
    }
  }

  /**
   * Prepare prompt for AI review
   */
  preparePrompt(code, reviewType, options) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[5]++;
    const promptTemplate =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[40]++, this.prompts[reviewType]);

    // Add context if provided
    let contextInfo =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[41]++, '');
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[42]++;
    if (options.language) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[8][0]++;
      cov_1w1jsij0n3().s[43]++;
      contextInfo += `Programming Language: ${options.language}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[8][1]++;
    }
    cov_1w1jsij0n3().s[44]++;
    if (options.framework) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[9][0]++;
      cov_1w1jsij0n3().s[45]++;
      contextInfo += `Framework: ${options.framework}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[9][1]++;
    }
    cov_1w1jsij0n3().s[46]++;
    if (options.focus) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[10][0]++;
      cov_1w1jsij0n3().s[47]++;
      contextInfo += `Focus Areas: ${options.focus.join(', ')}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[10][1]++;
    }
    cov_1w1jsij0n3().s[48]++;
    return [{
      role: 'system',
      content: promptTemplate.system
    }, {
      role: 'user',
      content: `${contextInfo}\n\nCode to review:\n\`\`\`\n${code}\n\`\`\`\n\n${promptTemplate.user}`
    }];
  }

  /**
   * Execute review with retry logic
   */
  async executeReviewWithRetry(messages) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[6]++;
    let lastError;
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[49]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[50]++, 1); attempt <= this.config.retryAttempts; attempt++) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[51]++;
      try {
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[52]++;
        this.logger.debug(`AI review attempt ${attempt}/${this.config.retryAttempts}`);
        const response =
        /* istanbul ignore next */
        (cov_1w1jsij0n3().s[53]++, await this.openai.chat.completions.create({
          model: this.config.model,
          messages,
          max_tokens: this.config.maxTokens,
          temperature: this.config.temperature,
          response_format: {
            type: 'json_object'
          }
        }));
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[54]++;
        if (!response.choices?.[0]?.message?.content) {
          /* istanbul ignore next */
          cov_1w1jsij0n3().b[11][0]++;
          cov_1w1jsij0n3().s[55]++;
          throw new Error('Empty response from AI service');
        } else
        /* istanbul ignore next */
        {
          cov_1w1jsij0n3().b[11][1]++;
        }
        cov_1w1jsij0n3().s[56]++;
        return response.choices[0].message.content;
      } catch (error) {
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[57]++;
        lastError = error;
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[58]++;
        this.logger.warn(`AI review attempt ${attempt} failed`, {
          error: error.message
        });
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[59]++;
        if (attempt < this.config.retryAttempts) {
          /* istanbul ignore next */
          cov_1w1jsij0n3().b[12][0]++;
          cov_1w1jsij0n3().s[60]++;
          await this.delay(this.config.retryDelay * attempt);
        } else
        /* istanbul ignore next */
        {
          cov_1w1jsij0n3().b[12][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[61]++;
    throw lastError;
  }

  /**
   * Process and validate AI response
   */
  async processReviewResponse(response, reviewType) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[7]++;
    cov_1w1jsij0n3().s[62]++;
    try {
      const parsed =
      /* istanbul ignore next */
      (cov_1w1jsij0n3().s[63]++, JSON.parse(response));

      // Validate response structure based on review type
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[64]++;
      this.validateResponseStructure(parsed, reviewType);

      // Enhance the response with additional processing
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[65]++;
      return this.enhanceReviewResponse(parsed, reviewType);
    } catch (error) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[66]++;
      this.logger.error('Failed to process AI response', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[67]++;
      throw new Error(`Invalid AI response format: ${error.message}`);
    }
  }

  /**
   * Validate response structure
   */
  validateResponseStructure(response, reviewType) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[8]++;
    const requiredFields =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[68]++, {
      codeReview: ['reviewSummary', 'issues'],
      refactoring: ['refactoringPlan', 'refactorings'],
      security: ['securityAssessment', 'vulnerabilities'],
      performance: ['performanceAssessment', 'optimizations']
    });
    const required =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[69]++,
    /* istanbul ignore next */
    (cov_1w1jsij0n3().b[13][0]++, requiredFields[reviewType]) ||
    /* istanbul ignore next */
    (cov_1w1jsij0n3().b[13][1]++, requiredFields.codeReview));
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[70]++;
    for (const field of required) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[71]++;
      if (!response[field]) {
        /* istanbul ignore next */
        cov_1w1jsij0n3().b[14][0]++;
        cov_1w1jsij0n3().s[72]++;
        throw new Error(`Missing required field: ${field}`);
      } else
      /* istanbul ignore next */
      {
        cov_1w1jsij0n3().b[14][1]++;
      }
    }
  }

  /**
   * Enhance review response with additional data
   */
  enhanceReviewResponse(response, reviewType) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[9]++;
    cov_1w1jsij0n3().s[73]++;
    // Add unique IDs if missing
    if (response.issues) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[15][0]++;
      cov_1w1jsij0n3().s[74]++;
      response.issues = response.issues.map((issue, index) => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[10]++;
        cov_1w1jsij0n3().s[75]++;
        return {
          id:
          /* istanbul ignore next */
          (cov_1w1jsij0n3().b[16][0]++, issue.id) ||
          /* istanbul ignore next */
          (cov_1w1jsij0n3().b[16][1]++, `issue_${Date.now()}_${index}`),
          ...issue
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[15][1]++;
    }

    // Add priority scoring
    cov_1w1jsij0n3().s[76]++;
    if (response.issues) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[17][0]++;
      cov_1w1jsij0n3().s[77]++;
      response.priorityScore = this.calculatePriorityScore(response.issues);
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[17][1]++;
    }

    // Add actionable items summary
    cov_1w1jsij0n3().s[78]++;
    response.actionableItems = this.extractActionableItems(response);
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[79]++;
    return response;
  }

  /**
   * Calculate priority score based on issues
   */
  calculatePriorityScore(issues) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[11]++;
    const weights =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[80]++, {
      CRITICAL: 10,
      HIGH: 7,
      MEDIUM: 4,
      LOW: 1
    });
    const totalWeight =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[81]++, issues.reduce((sum, issue) => {
      /* istanbul ignore next */
      cov_1w1jsij0n3().f[12]++;
      cov_1w1jsij0n3().s[82]++;
      return sum + (
      /* istanbul ignore next */
      (cov_1w1jsij0n3().b[18][0]++, weights[issue.severity]) ||
      /* istanbul ignore next */
      (cov_1w1jsij0n3().b[18][1]++, 1));
    }, 0));
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[83]++;
    return Math.min(100, Math.round(totalWeight / issues.length * 10));
  }

  /**
   * Extract actionable items from review
   */
  extractActionableItems(response) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[13]++;
    const items =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[84]++, []);

    // Extract from issues
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[85]++;
    if (response.issues) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[19][0]++;
      cov_1w1jsij0n3().s[86]++;
      response.issues.filter(issue => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[14]++;
        cov_1w1jsij0n3().s[87]++;
        return /* istanbul ignore next */(cov_1w1jsij0n3().b[20][0]++, issue.severity === 'HIGH') ||
        /* istanbul ignore next */
        (cov_1w1jsij0n3().b[20][1]++, issue.severity === 'CRITICAL');
      }).forEach(issue => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[15]++;
        cov_1w1jsij0n3().s[88]++;
        items.push({
          type: 'fix',
          priority: issue.severity,
          description:
          /* istanbul ignore next */
          (cov_1w1jsij0n3().b[21][0]++, issue.recommendation) ||
          /* istanbul ignore next */
          (cov_1w1jsij0n3().b[21][1]++, issue.description),
          location: issue.location
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[19][1]++;
    }

    // Extract from suggestions
    cov_1w1jsij0n3().s[89]++;
    if (response.suggestions) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().b[22][0]++;
      cov_1w1jsij0n3().s[90]++;
      response.suggestions.filter(suggestion => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[16]++;
        cov_1w1jsij0n3().s[91]++;
        return suggestion.priority === 'HIGH';
      }).forEach(suggestion => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[17]++;
        cov_1w1jsij0n3().s[92]++;
        items.push({
          type: 'improvement',
          priority: suggestion.priority,
          description: suggestion.description
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1w1jsij0n3().b[22][1]++;
    }
    cov_1w1jsij0n3().s[93]++;
    return items;
  }

  /**
   * Analyze basic code metrics
   */
  analyzeCodeMetrics(code) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[18]++;
    const lines =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[94]++, code.split('\n'));
    const nonEmptyLines =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[95]++, lines.filter(line => {
      /* istanbul ignore next */
      cov_1w1jsij0n3().f[19]++;
      cov_1w1jsij0n3().s[96]++;
      return line.trim().length > 0;
    }));
    const commentLines =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[97]++, lines.filter(line => {
      /* istanbul ignore next */
      cov_1w1jsij0n3().f[20]++;
      cov_1w1jsij0n3().s[98]++;
      return /* istanbul ignore next */(cov_1w1jsij0n3().b[23][0]++, line.trim().startsWith('//')) ||
      /* istanbul ignore next */
      (cov_1w1jsij0n3().b[23][1]++, line.trim().startsWith('#')) ||
      /* istanbul ignore next */
      (cov_1w1jsij0n3().b[23][2]++, line.trim().startsWith('/*'));
    }));
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[99]++;
    return {
      totalLines: lines.length,
      linesOfCode: nonEmptyLines.length,
      commentLines: commentLines.length,
      commentRatio: Math.round(commentLines.length / nonEmptyLines.length * 100),
      averageLineLength: Math.round(nonEmptyLines.reduce((sum, line) => {
        /* istanbul ignore next */
        cov_1w1jsij0n3().f[21]++;
        cov_1w1jsij0n3().s[100]++;
        return sum + line.length;
      }, 0) / nonEmptyLines.length)
    };
  }

  /**
   * Utility delay function
   */
  delay(ms) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[22]++;
    cov_1w1jsij0n3().s[101]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1w1jsij0n3().f[23]++;
      cov_1w1jsij0n3().s[102]++;
      return setTimeout(resolve, ms);
    });
  }

  /**
   * Batch review multiple files
   */
  async batchReview(files, options =
  /* istanbul ignore next */
  (cov_1w1jsij0n3().b[24][0]++, {})) {
    /* istanbul ignore next */
    cov_1w1jsij0n3().f[24]++;
    const results =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[103]++, []);
    const batchStartTime =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[104]++, Date.now());
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[105]++;
    this.logger.info('Starting batch code review', {
      fileCount: files.length
    });
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[106]++;
    for (const [index, file] of files.entries()) {
      /* istanbul ignore next */
      cov_1w1jsij0n3().s[107]++;
      try {
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[108]++;
        this.logger.debug(`Processing file ${index + 1}/${files.length}`, {
          fileName: file.name
        });
        const result =
        /* istanbul ignore next */
        (cov_1w1jsij0n3().s[109]++, await this.review(file.content, {
          ...options,
          fileName: file.name
        }));
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[110]++;
        results.push({
          fileName: file.name,
          ...result
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[111]++;
        this.logger.error(`Failed to review file: ${file.name}`, error);
        /* istanbul ignore next */
        cov_1w1jsij0n3().s[112]++;
        results.push({
          fileName: file.name,
          error: error.message
        });
      }
    }
    const batchResult =
    /* istanbul ignore next */
    (cov_1w1jsij0n3().s[113]++, {
      results,
      summary: {
        totalFiles: files.length,
        successfulReviews: results.filter(r => {
          /* istanbul ignore next */
          cov_1w1jsij0n3().f[25]++;
          cov_1w1jsij0n3().s[114]++;
          return !r.error;
        }).length,
        failedReviews: results.filter(r => {
          /* istanbul ignore next */
          cov_1w1jsij0n3().f[26]++;
          cov_1w1jsij0n3().s[115]++;
          return r.error;
        }).length,
        processingTime: Date.now() - batchStartTime
      }
    });
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[116]++;
    this.logger.info('Batch code review completed', batchResult.summary);
    /* istanbul ignore next */
    cov_1w1jsij0n3().s[117]++;
    return this.responseFormatter.success(batchResult, 'Batch code review completed');
  }
}
/* istanbul ignore next */
cov_1w1jsij0n3().s[118]++;
module.exports = new AIReviewer();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,