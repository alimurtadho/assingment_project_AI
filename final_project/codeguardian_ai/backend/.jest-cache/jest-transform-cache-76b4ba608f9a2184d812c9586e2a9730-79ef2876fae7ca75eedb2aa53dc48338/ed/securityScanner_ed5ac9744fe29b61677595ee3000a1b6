715e5646a56b747dee3b8646a109e840
/* istanbul ignore next */
"use strict";

function cov_1arydyzzjq() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/securityScanner.js";
  var hash = "0b3b8c784873a4e3e3381c3900b82a05a10fa363";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/securityScanner.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "1": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "2": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 41
        }
      },
      "3": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "10": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "11": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "12": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "13": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "14": {
        start: {
          line: 238,
          column: 30
        },
        end: {
          line: 238,
          column: 32
        }
      },
      "15": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 243,
          column: 7
        }
      },
      "16": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "17": {
        start: {
          line: 247,
          column: 30
        },
        end: {
          line: 247,
          column: 83
        }
      },
      "18": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 47
        }
      },
      "19": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 68
        }
      },
      "20": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "21": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "22": {
        start: {
          line: 256,
          column: 22
        },
        end: {
          line: 256,
          column: 67
        }
      },
      "23": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 83
        }
      },
      "24": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 258,
          column: 64
        }
      },
      "25": {
        start: {
          line: 260,
          column: 21
        },
        end: {
          line: 267,
          column: 7
        }
      },
      "26": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "27": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 92
        }
      },
      "28": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 55
        }
      },
      "29": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 279,
          column: 99
        }
      },
      "30": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "31": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 288,
          column: 56
        }
      },
      "32": {
        start: {
          line: 289,
          column: 6
        },
        end: {
          line: 293,
          column: 8
        }
      },
      "33": {
        start: {
          line: 295,
          column: 6
        },
        end: {
          line: 295,
          column: 57
        }
      },
      "34": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 300,
          column: 8
        }
      },
      "35": {
        start: {
          line: 308,
          column: 27
        },
        end: {
          line: 311,
          column: 10
        }
      },
      "36": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 57
        }
      },
      "37": {
        start: {
          line: 310,
          column: 6
        },
        end: {
          line: 310,
          column: 17
        }
      },
      "38": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 318,
          column: 6
        }
      },
      "39": {
        start: {
          line: 325,
          column: 28
        },
        end: {
          line: 325,
          column: 30
        }
      },
      "40": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "41": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 347,
          column: 7
        }
      },
      "42": {
        start: {
          line: 330,
          column: 27
        },
        end: {
          line: 330,
          column: 64
        }
      },
      "43": {
        start: {
          line: 331,
          column: 29
        },
        end: {
          line: 331,
          column: 67
        }
      },
      "44": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "45": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 27
        }
      },
      "46": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 75
        }
      },
      "47": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 55
        }
      },
      "48": {
        start: {
          line: 371,
          column: 18
        },
        end: {
          line: 371,
          column: 34
        }
      },
      "49": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 372,
          column: 60
        }
      },
      "50": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 65
        }
      },
      "51": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 379,
          column: 6
        }
      },
      "52": {
        start: {
          line: 386,
          column: 21
        },
        end: {
          line: 386,
          column: 24
        }
      },
      "53": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 389,
          column: 60
        }
      },
      "54": {
        start: {
          line: 389,
          column: 42
        },
        end: {
          line: 389,
          column: 60
        }
      },
      "55": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 39
        }
      },
      "56": {
        start: {
          line: 390,
          column: 21
        },
        end: {
          line: 390,
          column: 39
        }
      },
      "57": {
        start: {
          line: 391,
          column: 4
        },
        end: {
          line: 391,
          column: 48
        }
      },
      "58": {
        start: {
          line: 391,
          column: 30
        },
        end: {
          line: 391,
          column: 48
        }
      },
      "59": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 35
        }
      },
      "60": {
        start: {
          line: 400,
          column: 28
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "61": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 92
        }
      },
      "62": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 47
        }
      },
      "63": {
        start: {
          line: 417,
          column: 38
        },
        end: {
          line: 417,
          column: 47
        }
      },
      "64": {
        start: {
          line: 419,
          column: 24
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "65": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 420,
          column: 62
        }
      },
      "66": {
        start: {
          line: 424,
          column: 24
        },
        end: {
          line: 424,
          column: 74
        }
      },
      "67": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "68": {
        start: {
          line: 432,
          column: 27
        },
        end: {
          line: 435,
          column: 10
        }
      },
      "69": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 433,
          column: 57
        }
      },
      "70": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 17
        }
      },
      "71": {
        start: {
          line: 437,
          column: 27
        },
        end: {
          line: 440,
          column: 10
        }
      },
      "72": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 438,
          column: 57
        }
      },
      "73": {
        start: {
          line: 439,
          column: 6
        },
        end: {
          line: 439,
          column: 17
        }
      },
      "74": {
        start: {
          line: 442,
          column: 22
        },
        end: {
          line: 447,
          column: 10
        }
      },
      "75": {
        start: {
          line: 443,
          column: 6
        },
        end: {
          line: 445,
          column: 7
        }
      },
      "76": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 49
        }
      },
      "77": {
        start: {
          line: 446,
          column: 6
        },
        end: {
          line: 446,
          column: 17
        }
      },
      "78": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 459,
          column: 6
        }
      },
      "79": {
        start: {
          line: 466,
          column: 22
        },
        end: {
          line: 470,
          column: 10
        }
      },
      "80": {
        start: {
          line: 467,
          column: 18
        },
        end: {
          line: 467,
          column: 49
        }
      },
      "81": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 468,
          column: 37
        }
      },
      "82": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 469,
          column: 17
        }
      },
      "83": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "84": {
        start: {
          line: 473,
          column: 28
        },
        end: {
          line: 473,
          column: 33
        }
      },
      "85": {
        start: {
          line: 476,
          column: 33
        },
        end: {
          line: 476,
          column: 49
        }
      },
      "86": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 41
        }
      },
      "87": {
        start: {
          line: 485,
          column: 28
        },
        end: {
          line: 485,
          column: 30
        }
      },
      "88": {
        start: {
          line: 486,
          column: 27
        },
        end: {
          line: 486,
          column: 68
        }
      },
      "89": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 501,
          column: 5
        }
      },
      "90": {
        start: {
          line: 489,
          column: 32
        },
        end: {
          line: 489,
          column: 79
        }
      },
      "91": {
        start: {
          line: 489,
          column: 50
        },
        end: {
          line: 489,
          column: 71
        }
      },
      "92": {
        start: {
          line: 490,
          column: 23
        },
        end: {
          line: 491,
          column: 93
        }
      },
      "93": {
        start: {
          line: 491,
          column: 39
        },
        end: {
          line: 491,
          column: 62
        }
      },
      "94": {
        start: {
          line: 493,
          column: 6
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "95": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 506,
          column: 7
        }
      },
      "96": {
        start: {
          line: 504,
          column: 28
        },
        end: {
          line: 504,
          column: 58
        }
      },
      "97": {
        start: {
          line: 505,
          column: 6
        },
        end: {
          line: 505,
          column: 67
        }
      },
      "98": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 518,
          column: 11
        }
      },
      "99": {
        start: {
          line: 514,
          column: 20
        },
        end: {
          line: 514,
          column: 29
        }
      },
      "100": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 515,
          column: 42
        }
      },
      "101": {
        start: {
          line: 516,
          column: 6
        },
        end: {
          line: 516,
          column: 31
        }
      },
      "102": {
        start: {
          line: 517,
          column: 6
        },
        end: {
          line: 517,
          column: 20
        }
      },
      "103": {
        start: {
          line: 525,
          column: 19
        },
        end: {
          line: 532,
          column: 5
        }
      },
      "104": {
        start: {
          line: 533,
          column: 4
        },
        end: {
          line: 533,
          column: 60
        }
      },
      "105": {
        start: {
          line: 540,
          column: 25
        },
        end: {
          line: 547,
          column: 5
        }
      },
      "106": {
        start: {
          line: 548,
          column: 4
        },
        end: {
          line: 548,
          column: 95
        }
      },
      "107": {
        start: {
          line: 555,
          column: 24
        },
        end: {
          line: 555,
          column: 70
        }
      },
      "108": {
        start: {
          line: 555,
          column: 61
        },
        end: {
          line: 555,
          column: 67
        }
      },
      "109": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 561,
          column: 8
        }
      },
      "110": {
        start: {
          line: 557,
          column: 36
        },
        end: {
          line: 561,
          column: 5
        }
      },
      "111": {
        start: {
          line: 559,
          column: 49
        },
        end: {
          line: 559,
          column: 64
        }
      },
      "112": {
        start: {
          line: 559,
          column: 75
        },
        end: {
          line: 559,
          column: 81
        }
      },
      "113": {
        start: {
          line: 560,
          column: 42
        },
        end: {
          line: 560,
          column: 57
        }
      },
      "114": {
        start: {
          line: 565,
          column: 0
        },
        end: {
          line: 565,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 226,
            column: 3
          }
        },
        loc: {
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 281,
            column: 3
          }
        },
        line: 226
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 3
          }
        },
        loc: {
          start: {
            line: 286,
            column: 45
          },
          end: {
            line: 302,
            column: 3
          }
        },
        line: 286
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 307,
            column: 2
          },
          end: {
            line: 307,
            column: 3
          }
        },
        loc: {
          start: {
            line: 307,
            column: 35
          },
          end: {
            line: 319,
            column: 3
          }
        },
        line: 307
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 308,
            column: 50
          },
          end: {
            line: 308,
            column: 51
          }
        },
        loc: {
          start: {
            line: 308,
            column: 65
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 308
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 324,
            column: 2
          },
          end: {
            line: 324,
            column: 3
          }
        },
        loc: {
          start: {
            line: 324,
            column: 51
          },
          end: {
            line: 351,
            column: 3
          }
        },
        line: 324
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 356,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        },
        loc: {
          start: {
            line: 356,
            column: 28
          },
          end: {
            line: 358,
            column: 3
          }
        },
        line: 356
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 363,
            column: 2
          },
          end: {
            line: 363,
            column: 3
          }
        },
        loc: {
          start: {
            line: 363,
            column: 29
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 363
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 370,
            column: 2
          },
          end: {
            line: 370,
            column: 3
          }
        },
        loc: {
          start: {
            line: 370,
            column: 54
          },
          end: {
            line: 380,
            column: 3
          }
        },
        line: 370
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 385,
            column: 2
          },
          end: {
            line: 385,
            column: 3
          }
        },
        loc: {
          start: {
            line: 385,
            column: 38
          },
          end: {
            line: 394,
            column: 3
          }
        },
        line: 385
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 399,
            column: 2
          },
          end: {
            line: 399,
            column: 3
          }
        },
        loc: {
          start: {
            line: 399,
            column: 47
          },
          end: {
            line: 411,
            column: 3
          }
        },
        line: 399
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 416,
            column: 2
          },
          end: {
            line: 416,
            column: 3
          }
        },
        loc: {
          start: {
            line: 416,
            column: 38
          },
          end: {
            line: 426,
            column: 3
          }
        },
        line: 416
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 419,
            column: 47
          },
          end: {
            line: 419,
            column: 48
          }
        },
        loc: {
          start: {
            line: 419,
            column: 62
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 419
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 43
          },
          end: {
            line: 460,
            column: 3
          }
        },
        line: 431
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 432,
            column: 50
          },
          end: {
            line: 432,
            column: 51
          }
        },
        loc: {
          start: {
            line: 432,
            column: 65
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 432
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 437,
            column: 50
          },
          end: {
            line: 437,
            column: 51
          }
        },
        loc: {
          start: {
            line: 437,
            column: 65
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 437
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 442,
            column: 45
          },
          end: {
            line: 442,
            column: 46
          }
        },
        loc: {
          start: {
            line: 442,
            column: 60
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 442
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 465,
            column: 2
          },
          end: {
            line: 465,
            column: 3
          }
        },
        loc: {
          start: {
            line: 465,
            column: 43
          },
          end: {
            line: 479,
            column: 3
          }
        },
        line: 465
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 466,
            column: 45
          },
          end: {
            line: 466,
            column: 46
          }
        },
        loc: {
          start: {
            line: 466,
            column: 60
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 466
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 473,
            column: 13
          }
        },
        loc: {
          start: {
            line: 473,
            column: 28
          },
          end: {
            line: 473,
            column: 33
          }
        },
        line: 473
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 475,
            column: 11
          },
          end: {
            line: 475,
            column: 12
          }
        },
        loc: {
          start: {
            line: 475,
            column: 31
          },
          end: {
            line: 478,
            column: 7
          }
        },
        line: 475
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 484,
            column: 2
          },
          end: {
            line: 484,
            column: 3
          }
        },
        loc: {
          start: {
            line: 484,
            column: 51
          },
          end: {
            line: 507,
            column: 3
          }
        },
        line: 484
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 489,
            column: 45
          },
          end: {
            line: 489,
            column: 46
          }
        },
        loc: {
          start: {
            line: 489,
            column: 50
          },
          end: {
            line: 489,
            column: 71
          }
        },
        line: 489
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 491,
            column: 34
          },
          end: {
            line: 491,
            column: 35
          }
        },
        loc: {
          start: {
            line: 491,
            column: 39
          },
          end: {
            line: 491,
            column: 62
          }
        },
        line: 491
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 503,
            column: 32
          },
          end: {
            line: 503,
            column: 33
          }
        },
        loc: {
          start: {
            line: 503,
            column: 42
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 503
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 512,
            column: 2
          },
          end: {
            line: 512,
            column: 3
          }
        },
        loc: {
          start: {
            line: 512,
            column: 22
          },
          end: {
            line: 519,
            column: 3
          }
        },
        line: 512
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 513,
            column: 24
          },
          end: {
            line: 513,
            column: 25
          }
        },
        loc: {
          start: {
            line: 513,
            column: 42
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 513
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 524,
            column: 2
          },
          end: {
            line: 524,
            column: 3
          }
        },
        loc: {
          start: {
            line: 524,
            column: 43
          },
          end: {
            line: 534,
            column: 3
          }
        },
        line: 524
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 539,
            column: 2
          },
          end: {
            line: 539,
            column: 3
          }
        },
        loc: {
          start: {
            line: 539,
            column: 49
          },
          end: {
            line: 549,
            column: 3
          }
        },
        line: 539
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 554,
            column: 2
          },
          end: {
            line: 554,
            column: 3
          }
        },
        loc: {
          start: {
            line: 554,
            column: 52
          },
          end: {
            line: 562,
            column: 3
          }
        },
        line: 554
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 555,
            column: 56
          },
          end: {
            line: 555,
            column: 57
          }
        },
        loc: {
          start: {
            line: 555,
            column: 61
          },
          end: {
            line: 555,
            column: 67
          }
        },
        line: 555
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 557,
            column: 27
          },
          end: {
            line: 557,
            column: 28
          }
        },
        loc: {
          start: {
            line: 557,
            column: 36
          },
          end: {
            line: 561,
            column: 5
          }
        },
        line: 557
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 559,
            column: 44
          },
          end: {
            line: 559,
            column: 45
          }
        },
        loc: {
          start: {
            line: 559,
            column: 49
          },
          end: {
            line: 559,
            column: 64
          }
        },
        line: 559
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 559,
            column: 70
          },
          end: {
            line: 559,
            column: 71
          }
        },
        loc: {
          start: {
            line: 559,
            column: 75
          },
          end: {
            line: 559,
            column: 81
          }
        },
        line: 559
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 560,
            column: 37
          },
          end: {
            line: 560,
            column: 38
          }
        },
        loc: {
          start: {
            line: 560,
            column: 42
          },
          end: {
            line: 560,
            column: 57
          }
        },
        line: 560
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 29
          },
          end: {
            line: 226,
            column: 31
          }
        }],
        line: 226
      },
      "1": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "2": {
        loc: {
          start: {
            line: 286,
            column: 23
          },
          end: {
            line: 286,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 286,
            column: 34
          },
          end: {
            line: 286,
            column: 43
          }
        }],
        line: 286
      },
      "3": {
        loc: {
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 46
          }
        }, {
          start: {
            line: 309,
            column: 50
          },
          end: {
            line: 309,
            column: 51
          }
        }],
        line: 309
      },
      "4": {
        loc: {
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 315,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 315,
            column: 31
          }
        }, {
          start: {
            line: 315,
            column: 35
          },
          end: {
            line: 315,
            column: 36
          }
        }],
        line: 315
      },
      "5": {
        loc: {
          start: {
            line: 316,
            column: 14
          },
          end: {
            line: 316,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 14
          },
          end: {
            line: 316,
            column: 35
          }
        }, {
          start: {
            line: 316,
            column: 39
          },
          end: {
            line: 316,
            column: 40
          }
        }],
        line: 316
      },
      "6": {
        loc: {
          start: {
            line: 317,
            column: 11
          },
          end: {
            line: 317,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 11
          },
          end: {
            line: 317,
            column: 29
          }
        }, {
          start: {
            line: 317,
            column: 33
          },
          end: {
            line: 317,
            column: 34
          }
        }],
        line: 317
      },
      "7": {
        loc: {
          start: {
            line: 370,
            column: 36
          },
          end: {
            line: 370,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 51
          },
          end: {
            line: 370,
            column: 52
          }
        }],
        line: 370
      },
      "8": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "9": {
        loc: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "10": {
        loc: {
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "11": {
        loc: {
          start: {
            line: 410,
            column: 11
          },
          end: {
            line: 410,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 410,
            column: 11
          },
          end: {
            line: 410,
            column: 45
          }
        }, {
          start: {
            line: 410,
            column: 49
          },
          end: {
            line: 410,
            column: 91
          }
        }],
        line: 410
      },
      "12": {
        loc: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "13": {
        loc: {
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 420,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 420,
            column: 55
          }
        }, {
          start: {
            line: 420,
            column: 59
          },
          end: {
            line: 420,
            column: 60
          }
        }],
        line: 420
      },
      "14": {
        loc: {
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 433,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 433,
            column: 46
          }
        }, {
          start: {
            line: 433,
            column: 50
          },
          end: {
            line: 433,
            column: 51
          }
        }],
        line: 433
      },
      "15": {
        loc: {
          start: {
            line: 438,
            column: 28
          },
          end: {
            line: 438,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 28
          },
          end: {
            line: 438,
            column: 46
          }
        }, {
          start: {
            line: 438,
            column: 50
          },
          end: {
            line: 438,
            column: 51
          }
        }],
        line: 438
      },
      "16": {
        loc: {
          start: {
            line: 443,
            column: 6
          },
          end: {
            line: 445,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 6
          },
          end: {
            line: 445,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "17": {
        loc: {
          start: {
            line: 444,
            column: 25
          },
          end: {
            line: 444,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 25
          },
          end: {
            line: 444,
            column: 38
          }
        }, {
          start: {
            line: 444,
            column: 42
          },
          end: {
            line: 444,
            column: 43
          }
        }],
        line: 444
      },
      "18": {
        loc: {
          start: {
            line: 452,
            column: 14
          },
          end: {
            line: 452,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 14
          },
          end: {
            line: 452,
            column: 33
          }
        }, {
          start: {
            line: 452,
            column: 37
          },
          end: {
            line: 452,
            column: 38
          }
        }],
        line: 452
      },
      "19": {
        loc: {
          start: {
            line: 453,
            column: 16
          },
          end: {
            line: 453,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 453,
            column: 16
          },
          end: {
            line: 453,
            column: 37
          }
        }, {
          start: {
            line: 453,
            column: 41
          },
          end: {
            line: 453,
            column: 42
          }
        }],
        line: 453
      },
      "20": {
        loc: {
          start: {
            line: 454,
            column: 13
          },
          end: {
            line: 454,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 13
          },
          end: {
            line: 454,
            column: 31
          }
        }, {
          start: {
            line: 454,
            column: 35
          },
          end: {
            line: 454,
            column: 36
          }
        }],
        line: 454
      },
      "21": {
        loc: {
          start: {
            line: 465,
            column: 32
          },
          end: {
            line: 465,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 465,
            column: 40
          },
          end: {
            line: 465,
            column: 41
          }
        }],
        line: 465
      },
      "22": {
        loc: {
          start: {
            line: 468,
            column: 18
          },
          end: {
            line: 468,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 18
          },
          end: {
            line: 468,
            column: 26
          }
        }, {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 31
          }
        }],
        line: 468
      },
      "23": {
        loc: {
          start: {
            line: 490,
            column: 23
          },
          end: {
            line: 491,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 490,
            column: 47
          },
          end: {
            line: 490,
            column: 53
          }
        }, {
          start: {
            line: 491,
            column: 21
          },
          end: {
            line: 491,
            column: 93
          }
        }],
        line: 490
      },
      "24": {
        loc: {
          start: {
            line: 491,
            column: 21
          },
          end: {
            line: 491,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 491,
            column: 77
          },
          end: {
            line: 491,
            column: 85
          }
        }, {
          start: {
            line: 491,
            column: 88
          },
          end: {
            line: 491,
            column: 93
          }
        }],
        line: 491
      },
      "25": {
        loc: {
          start: {
            line: 515,
            column: 22
          },
          end: {
            line: 515,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 22
          },
          end: {
            line: 515,
            column: 35
          }
        }, {
          start: {
            line: 515,
            column: 39
          },
          end: {
            line: 515,
            column: 41
          }
        }],
        line: 515
      },
      "26": {
        loc: {
          start: {
            line: 533,
            column: 11
          },
          end: {
            line: 533,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 11
          },
          end: {
            line: 533,
            column: 27
          }
        }, {
          start: {
            line: 533,
            column: 31
          },
          end: {
            line: 533,
            column: 59
          }
        }],
        line: 533
      },
      "27": {
        loc: {
          start: {
            line: 548,
            column: 11
          },
          end: {
            line: 548,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 548,
            column: 11
          },
          end: {
            line: 548,
            column: 33
          }
        }, {
          start: {
            line: 548,
            column: 37
          },
          end: {
            line: 548,
            column: 94
          }
        }],
        line: 548
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b3b8c784873a4e3e3381c3900b82a05a10fa363"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1arydyzzjq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1arydyzzjq();
/**
 * Enhanced Security Scanner Service
 * Detects various security vulnerabilities in code with improved architecture
 */

const ResponseFormatter =
/* istanbul ignore next */
(cov_1arydyzzjq().s[0]++, require('../utils/responseFormatter'));
const ValidationUtils =
/* istanbul ignore next */
(cov_1arydyzzjq().s[1]++, require('../utils/validationUtils'));
const Logger =
/* istanbul ignore next */
(cov_1arydyzzjq().s[2]++, require('../utils/logger'));
const ErrorHandler =
/* istanbul ignore next */
(cov_1arydyzzjq().s[3]++, require('../utils/errorHandler'));
class SecurityScanner {
  constructor() {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[0]++;
    cov_1arydyzzjq().s[4]++;
    this.logger = Logger;
    /* istanbul ignore next */
    cov_1arydyzzjq().s[5]++;
    this.validationUtils = ValidationUtils;
    /* istanbul ignore next */
    cov_1arydyzzjq().s[6]++;
    this.responseFormatter = ResponseFormatter;

    // Enhanced vulnerability patterns with better categorization
    /* istanbul ignore next */
    cov_1arydyzzjq().s[7]++;
    this.vulnerabilityPatterns = this.initializePatterns();
    /* istanbul ignore next */
    cov_1arydyzzjq().s[8]++;
    this.severityWeights = {
      HIGH: 10,
      MEDIUM: 5,
      LOW: 1
    };
  }
  initializePatterns() {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[1]++;
    cov_1arydyzzjq().s[9]++;
    return {
      hardcodedSecrets: {
        category: 'Secrets Management',
        patterns: [{
          name: 'API Key',
          regex: /(?:api[_-]?key|apikey|API_KEY)\s*[:=]\s*["']([a-zA-Z0-9_-]{10,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded API key detected - Move to environment variables',
          cwe: 'CWE-798'
        }, {
          name: 'Password',
          regex: /(?:password|pwd|pass)\s*[:=]\s*["']([^"']{6,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded password detected - Use secure credential storage',
          cwe: 'CWE-798'
        }, {
          name: 'Secret Key',
          regex: /(?:secret[_-]?key|secretkey)\s*[:=]\s*["']([a-zA-Z0-9_-]{16,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded secret key detected - Implement secrets management',
          cwe: 'CWE-798'
        }, {
          name: 'Database URL',
          regex: /(?:database[_-]?url|db[_-]?url)\s*[:=]\s*["']([^"']+)["']/gi,
          severity: 'MEDIUM',
          description: 'Hardcoded database URL detected - Use environment configuration',
          cwe: 'CWE-798'
        }, {
          name: 'JWT Secret',
          regex: /(?:jwt[_-]?secret)\s*[:=]\s*["']([a-zA-Z0-9_-]{16,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded JWT secret detected - Use secure key management',
          cwe: 'CWE-798'
        }, {
          name: 'Private Key',
          regex: /-----BEGIN\s+(RSA\s+)?PRIVATE KEY-----/gi,
          severity: 'HIGH',
          description: 'Private key embedded in code - Move to secure storage',
          cwe: 'CWE-798'
        }]
      },
      sqlInjection: {
        category: 'Injection Attacks',
        patterns: [{
          name: 'SQL Injection - String Concatenation',
          regex: /(?:SELECT|INSERT|UPDATE|DELETE)\s+.*\+.*(?:WHERE|VALUES)/gi,
          severity: 'HIGH',
          description: 'Potential SQL injection via string concatenation - Use parameterized queries',
          cwe: 'CWE-89'
        }, {
          name: 'SQL Injection - Template Literals',
          regex: /(?:SELECT|INSERT|UPDATE|DELETE)\s+.*\$\{.*\}/gi,
          severity: 'HIGH',
          description: 'Potential SQL injection via template literals - Use parameterized queries',
          cwe: 'CWE-89'
        }, {
          name: 'Dynamic Query Construction',
          regex: /query\s*\+=?\s*["'`][^"'`]*\$\{/gi,
          severity: 'MEDIUM',
          description: 'Dynamic query construction detected - Consider using ORM or query builders',
          cwe: 'CWE-89'
        }]
      },
      xss: {
        category: 'Cross-Site Scripting',
        patterns: [{
          name: 'innerHTML Assignment',
          regex: /\.innerHTML\s*=\s*(?!['"]).+/gi,
          severity: 'MEDIUM',
          description: 'Direct innerHTML assignment - Use textContent or sanitize input',
          cwe: 'CWE-79'
        }, {
          name: 'document.write Usage',
          regex: /document\.write\s*\(/gi,
          severity: 'MEDIUM',
          description: 'document.write usage detected - Consider safer alternatives',
          cwe: 'CWE-79'
        }, {
          name: 'eval() Usage',
          regex: /\beval\s*\(/gi,
          severity: 'HIGH',
          description: 'eval() usage detected - Avoid dynamic code execution',
          cwe: 'CWE-95'
        }, {
          name: 'Unsanitized User Input',
          regex: /(?:req\.body|req\.query|req\.params)\.[a-zA-Z_][a-zA-Z0-9_]*(?!\s*=\s*sanitize)/gi,
          severity: 'MEDIUM',
          description: 'Potentially unsanitized user input - Implement input validation',
          cwe: 'CWE-20'
        }]
      },
      weakCrypto: {
        category: 'Cryptographic Issues',
        patterns: [{
          name: 'MD5 Usage',
          regex: /\bmd5\b/gi,
          severity: 'HIGH',
          description: 'MD5 cryptographic hash detected - Use SHA-256 or stronger',
          cwe: 'CWE-327'
        }, {
          name: 'SHA1 Usage',
          regex: /\bsha1\b/gi,
          severity: 'MEDIUM',
          description: 'SHA1 cryptographic hash detected - Consider SHA-256 or stronger',
          cwe: 'CWE-327'
        }, {
          name: 'Weak Random Generation',
          regex: /Math\.random\(\)/gi,
          severity: 'MEDIUM',
          description: 'Math.random() used - Use crypto.randomBytes() for security-sensitive operations',
          cwe: 'CWE-338'
        }, {
          name: 'DES/3DES Usage',
          regex: /\b(?:des|3des|tripledes)\b/gi,
          severity: 'HIGH',
          description: 'Weak encryption algorithm detected - Use AES-256 or stronger',
          cwe: 'CWE-327'
        }]
      },
      insecureStorage: {
        category: 'Insecure Storage',
        patterns: [{
          name: 'localStorage Sensitive Data',
          regex: /localStorage\.setItem\s*\(\s*["'][^"']*(?:token|password|secret|key)["']/gi,
          severity: 'MEDIUM',
          description: 'Sensitive data stored in localStorage - Consider secure storage alternatives',
          cwe: 'CWE-922'
        }, {
          name: 'sessionStorage Sensitive Data',
          regex: /sessionStorage\.setItem\s*\(\s*["'][^"']*(?:token|password|secret|key)["']/gi,
          severity: 'MEDIUM',
          description: 'Sensitive data stored in sessionStorage - Consider secure storage alternatives',
          cwe: 'CWE-922'
        }, {
          name: 'Cookie without Secure Flag',
          regex: /document\.cookie\s*=\s*[^;]*(?!.*secure)/gi,
          severity: 'MEDIUM',
          description: 'Cookie set without secure flag - Add secure flag for HTTPS',
          cwe: 'CWE-614'
        }]
      },
      authenticationIssues: {
        category: 'Authentication & Authorization',
        patterns: [{
          name: 'Missing Authentication Check',
          regex: /app\.(get|post|put|delete)\s*\(\s*["'][^"']*["']\s*,\s*(?!.*auth)/gi,
          severity: 'MEDIUM',
          description: 'Route without authentication middleware - Add authentication checks',
          cwe: 'CWE-306'
        }, {
          name: 'Hardcoded JWT',
          regex: /jwt\.sign\s*\([^,]*,\s*["'][^"']+["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded JWT secret - Use environment variables',
          cwe: 'CWE-798'
        }, {
          name: 'Weak JWT Algorithm',
          regex: /algorithm\s*:\s*["'](?:HS256|none)["']/gi,
          severity: 'MEDIUM',
          description: 'Weak JWT algorithm - Consider RS256 or ES256',
          cwe: 'CWE-327'
        }]
      }
    };
  }

  /**
   * Enhanced scan method with better error handling and logging
   */
  async scan(code, options =
  /* istanbul ignore next */
  (cov_1arydyzzjq().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[2]++;
    cov_1arydyzzjq().s[10]++;
    try {
      /* istanbul ignore next */
      cov_1arydyzzjq().s[11]++;
      this.logger.info('Starting security scan', {
        codeLength: code.length,
        options
      });

      // Validate input
      /* istanbul ignore next */
      cov_1arydyzzjq().s[12]++;
      if (!this.validationUtils.validateCodeInput(code)) {
        /* istanbul ignore next */
        cov_1arydyzzjq().b[1][0]++;
        cov_1arydyzzjq().s[13]++;
        throw new Error('Invalid code input provided');
      } else
      /* istanbul ignore next */
      {
        cov_1arydyzzjq().b[1][1]++;
      }
      const vulnerabilities =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[14]++, []);
      const scanMetrics =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[15]++, {
        startTime: Date.now(),
        linesScanned: code.split('\n').length,
        patternsChecked: 0
      });

      // Scan for each vulnerability category
      /* istanbul ignore next */
      cov_1arydyzzjq().s[16]++;
      for (const [category, categoryData] of Object.entries(this.vulnerabilityPatterns)) {
        const categoryVulns =
        /* istanbul ignore next */
        (cov_1arydyzzjq().s[17]++, await this.scanCategory(code, category, categoryData));
        /* istanbul ignore next */
        cov_1arydyzzjq().s[18]++;
        vulnerabilities.push(...categoryVulns);
        /* istanbul ignore next */
        cov_1arydyzzjq().s[19]++;
        scanMetrics.patternsChecked += categoryData.patterns.length;
      }
      /* istanbul ignore next */
      cov_1arydyzzjq().s[20]++;
      scanMetrics.endTime = Date.now();
      /* istanbul ignore next */
      cov_1arydyzzjq().s[21]++;
      scanMetrics.duration = scanMetrics.endTime - scanMetrics.startTime;

      // Generate enhanced results
      const summary =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[22]++, this.generateEnhancedSummary(vulnerabilities));
      const recommendations =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[23]++, this.generateDetailedRecommendations(vulnerabilities));
      const riskScore =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[24]++, this.calculateRiskScore(vulnerabilities));
      const result =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[25]++, {
        vulnerabilities,
        summary,
        recommendations,
        riskScore,
        scanMetrics,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1arydyzzjq().s[26]++;
      this.logger.info('Security scan completed', {
        totalVulnerabilities: vulnerabilities.length,
        riskScore,
        duration: scanMetrics.duration
      });
      /* istanbul ignore next */
      cov_1arydyzzjq().s[27]++;
      return this.responseFormatter.success(result, 'Security scan completed successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1arydyzzjq().s[28]++;
      this.logger.error('Security scan failed', error);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[29]++;
      throw ErrorHandler.createError('SCAN_FAILED', `Security scan failed: ${error.message}`, 500);
    }
  }

  /**
   * Simplified scanCode method for backward compatibility
   */
  async scanCode(code, filename =
  /* istanbul ignore next */
  (cov_1arydyzzjq().b[2][0]++, 'unknown')) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[3]++;
    cov_1arydyzzjq().s[30]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[31]++, await this.scan(code, {
        filename
      }));
      /* istanbul ignore next */
      cov_1arydyzzjq().s[32]++;
      return {
        vulnerabilities: result.data.vulnerabilities,
        riskScore: result.data.riskScore,
        summary: result.data.summary
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1arydyzzjq().s[33]++;
      this.logger.error('scanCode method failed', error);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[34]++;
      return {
        vulnerabilities: [],
        riskScore: 0,
        summary: {
          totalIssues: 0,
          high: 0,
          medium: 0,
          low: 0
        }
      };
    }
  }

  /**
   * Generate summary from vulnerabilities array
   */
  generateSummary(vulnerabilities) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[4]++;
    const severityCounts =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[35]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[5]++;
      cov_1arydyzzjq().s[36]++;
      acc[vuln.severity] = (
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[3][0]++, acc[vuln.severity]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[3][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1arydyzzjq().s[37]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1arydyzzjq().s[38]++;
    return {
      totalIssues: vulnerabilities.length,
      high:
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[4][0]++, severityCounts.HIGH) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[4][1]++, 0),
      medium:
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[5][0]++, severityCounts.MEDIUM) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[5][1]++, 0),
      low:
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[6][0]++, severityCounts.LOW) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[6][1]++, 0)
    };
  }

  /**
   * Scan specific category with enhanced detection
   */
  async scanCategory(code, category, categoryData) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[6]++;
    const vulnerabilities =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[39]++, []);
    /* istanbul ignore next */
    cov_1arydyzzjq().s[40]++;
    for (const pattern of categoryData.patterns) {
      let match;
      /* istanbul ignore next */
      cov_1arydyzzjq().s[41]++;
      while ((match = pattern.regex.exec(code)) !== null) {
        const lineNumber =
        /* istanbul ignore next */
        (cov_1arydyzzjq().s[42]++, this.getLineNumber(code, match.index));
        const contextLines =
        /* istanbul ignore next */
        (cov_1arydyzzjq().s[43]++, this.getContextLines(code, lineNumber));
        /* istanbul ignore next */
        cov_1arydyzzjq().s[44]++;
        vulnerabilities.push({
          id: this.generateVulnerabilityId(),
          category,
          type: pattern.name,
          severity: pattern.severity,
          description: pattern.description,
          cwe: pattern.cwe,
          line: lineNumber,
          column: match.index - code.lastIndexOf('\n', match.index) - 1,
          matchedText: match[0],
          context: contextLines,
          recommendation: this.getSpecificRecommendation(pattern.name),
          confidence: this.calculateConfidence(pattern, match)
        });
      }
    }
    /* istanbul ignore next */
    cov_1arydyzzjq().s[45]++;
    return vulnerabilities;
  }

  /**
   * Generate unique vulnerability ID
   */
  generateVulnerabilityId() {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[7]++;
    cov_1arydyzzjq().s[46]++;
    return `vuln_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  /**
   * Get line number from character index
   */
  getLineNumber(code, index) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[8]++;
    cov_1arydyzzjq().s[47]++;
    return code.substring(0, index).split('\n').length;
  }

  /**
   * Get context lines around vulnerability
   */
  getContextLines(code, lineNumber, contextRange =
  /* istanbul ignore next */
  (cov_1arydyzzjq().b[7][0]++, 2)) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[9]++;
    const lines =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[48]++, code.split('\n'));
    const start =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[49]++, Math.max(0, lineNumber - contextRange - 1));
    const end =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[50]++, Math.min(lines.length, lineNumber + contextRange));
    /* istanbul ignore next */
    cov_1arydyzzjq().s[51]++;
    return {
      before: lines.slice(start, lineNumber - 1),
      current: lines[lineNumber - 1],
      after: lines.slice(lineNumber, end)
    };
  }

  /**
   * Calculate confidence score for vulnerability detection
   */
  calculateConfidence(pattern, match) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[10]++;
    let confidence =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[52]++, 0.7); // Base confidence

    // Increase confidence based on pattern specificity
    /* istanbul ignore next */
    cov_1arydyzzjq().s[53]++;
    if (pattern.regex.source.length > 50) {
      /* istanbul ignore next */
      cov_1arydyzzjq().b[8][0]++;
      cov_1arydyzzjq().s[54]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1arydyzzjq().b[8][1]++;
    }
    cov_1arydyzzjq().s[55]++;
    if (pattern.cwe) {
      /* istanbul ignore next */
      cov_1arydyzzjq().b[9][0]++;
      cov_1arydyzzjq().s[56]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1arydyzzjq().b[9][1]++;
    }
    cov_1arydyzzjq().s[57]++;
    if (match[0].length > 20) {
      /* istanbul ignore next */
      cov_1arydyzzjq().b[10][0]++;
      cov_1arydyzzjq().s[58]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1arydyzzjq().b[10][1]++;
    }
    cov_1arydyzzjq().s[59]++;
    return Math.min(1, confidence);
  }

  /**
   * Get specific recommendation for vulnerability type
   */
  getSpecificRecommendation(vulnerabilityType) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[11]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[60]++, {
      'API Key': 'Move API keys to environment variables and use a secrets management system',
      'Password': 'Never hardcode passwords. Use secure credential storage and hashing',
      'SQL Injection - String Concatenation': 'Use parameterized queries or prepared statements',
      'innerHTML Assignment': 'Use textContent or implement proper input sanitization',
      'eval() Usage': 'Replace eval() with safer alternatives like JSON.parse()',
      'MD5 Usage': 'Replace MD5 with SHA-256 or bcrypt for password hashing',
      'Math.random()': 'Use crypto.randomBytes() for cryptographically secure random numbers'
    });
    /* istanbul ignore next */
    cov_1arydyzzjq().s[61]++;
    return /* istanbul ignore next */(cov_1arydyzzjq().b[11][0]++, recommendations[vulnerabilityType]) ||
    /* istanbul ignore next */
    (cov_1arydyzzjq().b[11][1]++, 'Review and remediate this security issue');
  }

  /**
   * Calculate overall risk score
   */
  calculateRiskScore(vulnerabilities) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[12]++;
    cov_1arydyzzjq().s[62]++;
    if (vulnerabilities.length === 0) {
      /* istanbul ignore next */
      cov_1arydyzzjq().b[12][0]++;
      cov_1arydyzzjq().s[63]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1arydyzzjq().b[12][1]++;
    }
    const totalWeight =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[64]++, vulnerabilities.reduce((sum, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[13]++;
      cov_1arydyzzjq().s[65]++;
      return sum + (
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[13][0]++, this.severityWeights[vuln.severity]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[13][1]++, 1));
    }, 0));

    // Normalize to 0-100 scale
    const maxPossible =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[66]++, vulnerabilities.length * this.severityWeights.HIGH);
    /* istanbul ignore next */
    cov_1arydyzzjq().s[67]++;
    return Math.round(totalWeight / maxPossible * 100);
  }

  /**
   * Generate enhanced summary with more details
   */
  generateEnhancedSummary(vulnerabilities) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[14]++;
    const severityCounts =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[68]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[15]++;
      cov_1arydyzzjq().s[69]++;
      acc[vuln.severity] = (
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[14][0]++, acc[vuln.severity]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[14][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1arydyzzjq().s[70]++;
      return acc;
    }, {}));
    const categoryCounts =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[71]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[16]++;
      cov_1arydyzzjq().s[72]++;
      acc[vuln.category] = (
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[15][0]++, acc[vuln.category]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[15][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1arydyzzjq().s[73]++;
      return acc;
    }, {}));
    const cweCounts =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[74]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[17]++;
      cov_1arydyzzjq().s[75]++;
      if (vuln.cwe) {
        /* istanbul ignore next */
        cov_1arydyzzjq().b[16][0]++;
        cov_1arydyzzjq().s[76]++;
        acc[vuln.cwe] = (
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[17][0]++, acc[vuln.cwe]) ||
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[17][1]++, 0)) + 1;
      } else
      /* istanbul ignore next */
      {
        cov_1arydyzzjq().b[16][1]++;
      }
      cov_1arydyzzjq().s[77]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1arydyzzjq().s[78]++;
    return {
      totalIssues: vulnerabilities.length,
      severityBreakdown: {
        high:
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[18][0]++, severityCounts.HIGH) ||
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[18][1]++, 0),
        medium:
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[19][0]++, severityCounts.MEDIUM) ||
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[19][1]++, 0),
        low:
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[20][0]++, severityCounts.LOW) ||
        /* istanbul ignore next */
        (cov_1arydyzzjq().b[20][1]++, 0)
      },
      categoryBreakdown: categoryCounts,
      cweBreakdown: cweCounts,
      topIssues: this.getTopIssues(vulnerabilities, 5)
    };
  }

  /**
   * Get top issues by severity and frequency
   */
  getTopIssues(vulnerabilities, limit =
  /* istanbul ignore next */
  (cov_1arydyzzjq().b[21][0]++, 5)) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[18]++;
    const issueFreq =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[79]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[19]++;
      const key =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[80]++, `${vuln.type}-${vuln.severity}`);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[81]++;
      acc[key] = (
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[22][0]++, acc[key]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[22][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1arydyzzjq().s[82]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1arydyzzjq().s[83]++;
    return Object.entries(issueFreq).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[20]++;
      cov_1arydyzzjq().s[84]++;
      return b - a;
    }).slice(0, limit).map(([issue, count]) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[21]++;
      const [type, severity] =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[85]++, issue.split('-'));
      /* istanbul ignore next */
      cov_1arydyzzjq().s[86]++;
      return {
        type,
        severity,
        count
      };
    });
  }

  /**
   * Generate detailed recommendations with prioritization
   */
  generateDetailedRecommendations(vulnerabilities) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[22]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[87]++, []);
    const categoryGroups =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[88]++, this.groupBy(vulnerabilities, 'category'));
    /* istanbul ignore next */
    cov_1arydyzzjq().s[89]++;
    for (const [category, vulns] of Object.entries(categoryGroups)) {
      const highSeverityCount =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[90]++, vulns.filter(v => {
        /* istanbul ignore next */
        cov_1arydyzzjq().f[23]++;
        cov_1arydyzzjq().s[91]++;
        return v.severity === 'HIGH';
      }).length);
      const priority =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[92]++, highSeverityCount > 0 ?
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[23][0]++, 'HIGH') :
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[23][1]++, vulns.filter(v => {
        /* istanbul ignore next */
        cov_1arydyzzjq().f[24]++;
        cov_1arydyzzjq().s[93]++;
        return v.severity === 'MEDIUM';
      }).length > 0 ?
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[24][0]++, 'MEDIUM') :
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[24][1]++, 'LOW')));
      /* istanbul ignore next */
      cov_1arydyzzjq().s[94]++;
      recommendations.push({
        category,
        priority,
        issueCount: vulns.length,
        title: this.getCategoryRecommendationTitle(category),
        description: this.getCategoryRecommendationDescription(category),
        actionItems: this.getCategoryActionItems(category, vulns)
      });
    }
    /* istanbul ignore next */
    cov_1arydyzzjq().s[95]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[25]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[96]++, {
        HIGH: 3,
        MEDIUM: 2,
        LOW: 1
      });
      /* istanbul ignore next */
      cov_1arydyzzjq().s[97]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }

  /**
   * Group array by key
   */
  groupBy(array, key) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[26]++;
    cov_1arydyzzjq().s[98]++;
    return array.reduce((groups, item) => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[27]++;
      const group =
      /* istanbul ignore next */
      (cov_1arydyzzjq().s[99]++, item[key]);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[100]++;
      groups[group] =
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[25][0]++, groups[group]) ||
      /* istanbul ignore next */
      (cov_1arydyzzjq().b[25][1]++, []);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[101]++;
      groups[group].push(item);
      /* istanbul ignore next */
      cov_1arydyzzjq().s[102]++;
      return groups;
    }, {});
  }

  /**
   * Get category-specific recommendation title
   */
  getCategoryRecommendationTitle(category) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[28]++;
    const titles =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[103]++, {
      'Secrets Management': 'Implement Proper Secrets Management',
      'Injection Attacks': 'Prevent Injection Vulnerabilities',
      'Cross-Site Scripting': 'Implement XSS Protection',
      'Cryptographic Issues': 'Upgrade Cryptographic Implementation',
      'Insecure Storage': 'Secure Data Storage Practices',
      'Authentication & Authorization': 'Strengthen Authentication Mechanisms'
    });
    /* istanbul ignore next */
    cov_1arydyzzjq().s[104]++;
    return /* istanbul ignore next */(cov_1arydyzzjq().b[26][0]++, titles[category]) ||
    /* istanbul ignore next */
    (cov_1arydyzzjq().b[26][1]++, `Address ${category} Issues`);
  }

  /**
   * Get category-specific recommendation description
   */
  getCategoryRecommendationDescription(category) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[29]++;
    const descriptions =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[105]++, {
      'Secrets Management': 'Move all hardcoded secrets to environment variables or dedicated secrets management systems',
      'Injection Attacks': 'Implement parameterized queries and input validation to prevent injection attacks',
      'Cross-Site Scripting': 'Sanitize all user inputs and implement proper output encoding',
      'Cryptographic Issues': 'Replace weak cryptographic algorithms with modern, secure alternatives',
      'Insecure Storage': 'Implement secure storage mechanisms for sensitive data',
      'Authentication & Authorization': 'Add proper authentication and authorization checks to all endpoints'
    });
    /* istanbul ignore next */
    cov_1arydyzzjq().s[106]++;
    return /* istanbul ignore next */(cov_1arydyzzjq().b[27][0]++, descriptions[category]) ||
    /* istanbul ignore next */
    (cov_1arydyzzjq().b[27][1]++, `Review and fix ${category.toLowerCase()} related issues`);
  }

  /**
   * Get category-specific action items
   */
  getCategoryActionItems(category, vulnerabilities) {
    /* istanbul ignore next */
    cov_1arydyzzjq().f[30]++;
    const uniqueTypes =
    /* istanbul ignore next */
    (cov_1arydyzzjq().s[107]++, [...new Set(vulnerabilities.map(v => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[31]++;
      cov_1arydyzzjq().s[108]++;
      return v.type;
    }))]);
    /* istanbul ignore next */
    cov_1arydyzzjq().s[109]++;
    return uniqueTypes.map(type => {
      /* istanbul ignore next */
      cov_1arydyzzjq().f[32]++;
      cov_1arydyzzjq().s[110]++;
      return {
        action: this.getSpecificRecommendation(type),
        affectedLines: vulnerabilities.filter(v => {
          /* istanbul ignore next */
          cov_1arydyzzjq().f[33]++;
          cov_1arydyzzjq().s[111]++;
          return v.type === type;
        }).map(v => {
          /* istanbul ignore next */
          cov_1arydyzzjq().f[34]++;
          cov_1arydyzzjq().s[112]++;
          return v.line;
        }),
        severity: vulnerabilities.find(v => {
          /* istanbul ignore next */
          cov_1arydyzzjq().f[35]++;
          cov_1arydyzzjq().s[113]++;
          return v.type === type;
        }).severity
      };
    });
  }
}
/* istanbul ignore next */
cov_1arydyzzjq().s[114]++;
module.exports = new SecurityScanner();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,