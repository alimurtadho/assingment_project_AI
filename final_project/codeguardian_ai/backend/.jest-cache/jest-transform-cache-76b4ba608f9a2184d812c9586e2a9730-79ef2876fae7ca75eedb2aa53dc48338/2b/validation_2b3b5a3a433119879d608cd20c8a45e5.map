{"version":3,"names":["Joi","require","validateFileUpload","req","res","next","file","status","json","error","originalname","size","allowedExtensions","fileExtension","toLowerCase","substring","lastIndexOf","includes","join","validateRegistration","schema","object","email","string","required","name","min","max","password","validate","body","details","map","d","message","validateLogin","validateScanRequest","scanType","valid","optional","options","validateRequest","module","exports"],"sources":["validation.js"],"sourcesContent":["const Joi = require('joi');\n\n// File upload validation\nconst validateFileUpload = (req, res, next) => {\n  if (!req.file) {\n    return res.status(400).json({ error: 'No file uploaded' });\n  }\n  \n  const { originalname, size } = req.file;\n  \n  // Validate file size (5MB limit)\n  if (size > 5 * 1024 * 1024) {\n    return res.status(400).json({ error: 'File size exceeds 5MB limit' });\n  }\n  \n  // Validate file extension\n  const allowedExtensions = ['.js', '.ts', '.py', '.java', '.cpp', '.c', '.php', '.rb', '.go', '.rs'];\n  const fileExtension = originalname.toLowerCase().substring(originalname.lastIndexOf('.'));\n  \n  if (!allowedExtensions.includes(fileExtension)) {\n    return res.status(400).json({ \n      error: 'Invalid file type. Allowed types: ' + allowedExtensions.join(', ')\n    });\n  }\n  \n  next();\n};\n\n// User registration validation\nconst validateRegistration = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    name: Joi.string().min(2).max(50).required(),\n    password: Joi.string().min(6).max(100).required()\n  });\n  \n  const { error } = schema.validate(req.body);\n  \n  if (error) {\n    return res.status(400).json({ \n      error: 'Validation error',\n      details: error.details.map(d => d.message)\n    });\n  }\n  \n  next();\n};\n\n// User login validation\nconst validateLogin = (req, res, next) => {\n  const schema = Joi.object({\n    email: Joi.string().email().required(),\n    password: Joi.string().required()\n  });\n  \n  const { error } = schema.validate(req.body);\n  \n  if (error) {\n    return res.status(400).json({ \n      error: 'Validation error',\n      details: error.details.map(d => d.message)\n    });\n  }\n  \n  next();\n};\n\n// Scan request validation\nconst validateScanRequest = (req, res, next) => {\n  const schema = Joi.object({\n    scanType: Joi.string().valid('security', 'ai-review', 'test-generation').optional(),\n    options: Joi.object().optional()\n  });\n  \n  const { error } = schema.validate(req.body);\n  \n  if (error) {\n    return res.status(400).json({ \n      error: 'Validation error',\n      details: error.details.map(d => d.message)\n    });\n  }\n  \n  next();\n};\n\n// Generic request validation\nconst validateRequest = (schema) => {\n  return (req, res, next) => {\n    const { error } = schema.validate(req.body);\n    \n    if (error) {\n      return res.status(400).json({ \n        error: 'Validation error',\n        details: error.details.map(d => d.message)\n      });\n    }\n    \n    next();\n  };\n};\n\nmodule.exports = {\n  validateFileUpload,\n  validateRegistration,\n  validateLogin,\n  validateScanRequest,\n  validateRequest\n};\n"],"mappings":"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","ignoreList":[]}