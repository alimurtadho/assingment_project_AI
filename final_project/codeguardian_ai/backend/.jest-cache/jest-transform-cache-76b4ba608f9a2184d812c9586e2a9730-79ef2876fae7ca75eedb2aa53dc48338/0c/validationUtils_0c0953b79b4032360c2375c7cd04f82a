86d8bd404df3872b8ad5bdfb9058eebc
/* istanbul ignore next */
"use strict";

function cov_2rhd6a1jgi() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/validationUtils.js";
  var hash = "4415385b91315e7e8ec847768fab6b9e45adc606";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/validationUtils.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 35
        },
        end: {
          line: 2,
          column: 63
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "3": {
        start: {
          line: 10,
          column: 10
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "5": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "6": {
        start: {
          line: 25,
          column: 10
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "7": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "9": {
        start: {
          line: 30,
          column: 10
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "11": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "12": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "13": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "14": {
        start: {
          line: 45,
          column: 45
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "15": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "16": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "17": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "18": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 19
        }
      },
      "19": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 58
        }
      },
      "20": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 74,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 3
          }
        },
        loc: {
          start: {
            line: 6,
            column: 27
          },
          end: {
            line: 36,
            column: 3
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 26
          },
          end: {
            line: 8,
            column: 27
          }
        },
        loc: {
          start: {
            line: 8,
            column: 46
          },
          end: {
            line: 34,
            column: 7
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 36
          }
        },
        loc: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 3
          }
        },
        loc: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 64
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 15
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 65,
            column: 45
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 70,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 11
          },
          end: {
            line: 70,
            column: 35
          }
        }, {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 70,
            column: 57
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4415385b91315e7e8ec847768fab6b9e45adc606"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rhd6a1jgi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rhd6a1jgi();
// Backend Utilities - Validation Helpers
const {
  body,
  validationResult
} =
/* istanbul ignore next */
(cov_2rhd6a1jgi().s[0]++, require('express-validator'));
class ValidationUtils {
  // File validation rules
  static fileUploadRules() {
    /* istanbul ignore next */
    cov_2rhd6a1jgi().f[0]++;
    cov_2rhd6a1jgi().s[1]++;
    return [body('file').custom((value, {
      req
    }) => {
      /* istanbul ignore next */
      cov_2rhd6a1jgi().f[1]++;
      cov_2rhd6a1jgi().s[2]++;
      if (!req.file) {
        /* istanbul ignore next */
        cov_2rhd6a1jgi().b[0][0]++;
        cov_2rhd6a1jgi().s[3]++;
        throw new Error('File is required');
      } else
      /* istanbul ignore next */
      {
        cov_2rhd6a1jgi().b[0][1]++;
      }
      const allowedTypes =
      /* istanbul ignore next */
      (cov_2rhd6a1jgi().s[4]++, ['text/plain', 'application/javascript', 'text/javascript', 'application/typescript', 'text/x-python', 'text/x-java', 'text/x-c', 'text/x-cpp']);
      /* istanbul ignore next */
      cov_2rhd6a1jgi().s[5]++;
      if (!allowedTypes.includes(req.file.mimetype)) {
        /* istanbul ignore next */
        cov_2rhd6a1jgi().b[1][0]++;
        cov_2rhd6a1jgi().s[6]++;
        throw new Error('Invalid file type. Only code files are allowed.');
      } else
      /* istanbul ignore next */
      {
        cov_2rhd6a1jgi().b[1][1]++;
      }
      const maxSize =
      /* istanbul ignore next */
      (cov_2rhd6a1jgi().s[7]++, 5 * 1024 * 1024); // 5MB
      /* istanbul ignore next */
      cov_2rhd6a1jgi().s[8]++;
      if (req.file.size > maxSize) {
        /* istanbul ignore next */
        cov_2rhd6a1jgi().b[2][0]++;
        cov_2rhd6a1jgi().s[9]++;
        throw new Error('File size too large. Maximum 5MB allowed.');
      } else
      /* istanbul ignore next */
      {
        cov_2rhd6a1jgi().b[2][1]++;
      }
      cov_2rhd6a1jgi().s[10]++;
      return true;
    })];
  }

  // Handle validation errors
  static handleValidationErrors(req, res, next) {
    /* istanbul ignore next */
    cov_2rhd6a1jgi().f[2]++;
    const errors =
    /* istanbul ignore next */
    (cov_2rhd6a1jgi().s[11]++, validationResult(req));
    /* istanbul ignore next */
    cov_2rhd6a1jgi().s[12]++;
    if (!errors.isEmpty()) {
      /* istanbul ignore next */
      cov_2rhd6a1jgi().b[3][0]++;
      cov_2rhd6a1jgi().s[13]++;
      return res.status(400).json({
        success: false,
        message: 'Validation failed',
        errors: errors.array().map(error => {
          /* istanbul ignore next */
          cov_2rhd6a1jgi().f[3]++;
          cov_2rhd6a1jgi().s[14]++;
          return {
            field: error.param,
            message: error.msg,
            value: error.value
          };
        })
      });
    } else
    /* istanbul ignore next */
    {
      cov_2rhd6a1jgi().b[3][1]++;
    }
    cov_2rhd6a1jgi().s[15]++;
    next();
  }

  // Sanitize file content
  static sanitizeFileContent(content) {
    /* istanbul ignore next */
    cov_2rhd6a1jgi().f[4]++;
    cov_2rhd6a1jgi().s[16]++;
    // Remove potential malicious content
    return content.replace(/[\x00-\x08\x0B-\x0C\x0E-\x1F\x7F]/g, '') // Remove control characters
    .substring(0, 100000); // Limit to 100KB of content
  }

  // Validate API keys
  static validateApiKey(apiKey) {
    /* istanbul ignore next */
    cov_2rhd6a1jgi().f[5]++;
    cov_2rhd6a1jgi().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2rhd6a1jgi().b[5][0]++, !apiKey) ||
    /* istanbul ignore next */
    (cov_2rhd6a1jgi().b[5][1]++, typeof apiKey !== 'string')) {
      /* istanbul ignore next */
      cov_2rhd6a1jgi().b[4][0]++;
      cov_2rhd6a1jgi().s[18]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2rhd6a1jgi().b[4][1]++;
    }

    // Basic OpenAI API key format validation
    cov_2rhd6a1jgi().s[19]++;
    return /* istanbul ignore next */(cov_2rhd6a1jgi().b[6][0]++, apiKey.startsWith('sk-')) &&
    /* istanbul ignore next */
    (cov_2rhd6a1jgi().b[6][1]++, apiKey.length > 20);
  }
}
/* istanbul ignore next */
cov_2rhd6a1jgi().s[20]++;
module.exports = ValidationUtils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,