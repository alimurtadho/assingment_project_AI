56c3d8707d7112ed5b2cd0130ff490a3
/* istanbul ignore next */
function cov_5omwpzjcz() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/routes/ai-review.js";
  var hash = "ca652bafb9c94306e4a1d8b3aa3f291e26807767";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/routes/ai-review.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 32
        }
      },
      "2": {
        start: {
          line: 3,
          column: 31
        },
        end: {
          line: 3,
          column: 66
        }
      },
      "3": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "6": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "7": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "8": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "9": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "10": {
        start: {
          line: 21,
          column: 37
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "11": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "13": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 80
        }
      },
      "14": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "16": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "18": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "19": {
        start: {
          line: 70,
          column: 0
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "20": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "21": {
        start: {
          line: 72,
          column: 19
        },
        end: {
          line: 72,
          column: 29
        }
      },
      "22": {
        start: {
          line: 74,
          column: 19
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "23": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "24": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 72
        }
      },
      "25": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "26": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "27": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 51
        }
      },
      "28": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 121,
          column: 3
        }
      },
      "29": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "30": {
        start: {
          line: 100,
          column: 37
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "31": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 48
        }
      },
      "32": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "33": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 94
        }
      },
      "34": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 101
        }
      },
      "35": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 112,
          column: 7
        }
      },
      "36": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 47
        }
      },
      "37": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "38": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 66
          },
          end: {
            line: 19,
            column: 67
          }
        },
        loc: {
          start: {
            line: 19,
            column: 86
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 27
          }
        },
        loc: {
          start: {
            line: 70,
            column: 46
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 70
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 98,
            column: 68
          },
          end: {
            line: 98,
            column: 69
          }
        },
        loc: {
          start: {
            line: 98,
            column: 88
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 51
          }
        }, {
          start: {
            line: 46,
            column: 55
          },
          end: {
            line: 46,
            column: 56
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 104,
            column: 67
          },
          end: {
            line: 104,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 67
          },
          end: {
            line: 104,
            column: 76
          }
        }, {
          start: {
            line: 104,
            column: 80
          },
          end: {
            line: 104,
            column: 89
          }
        }],
        line: 104
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ca652bafb9c94306e4a1d8b3aa3f291e26807767"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5omwpzjcz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5omwpzjcz();
const express =
/* istanbul ignore next */
(cov_5omwpzjcz().s[0]++, require('express'));
const multer =
/* istanbul ignore next */
(cov_5omwpzjcz().s[1]++, require('multer'));
const {
  validateFileUpload
} =
/* istanbul ignore next */
(cov_5omwpzjcz().s[2]++, require('../middleware/validation'));
const aiReviewer =
/* istanbul ignore next */
(cov_5omwpzjcz().s[3]++, require('../services/aiReviewer'));
const {
  PrismaClient
} =
/* istanbul ignore next */
(cov_5omwpzjcz().s[4]++, require('@prisma/client'));
const router =
/* istanbul ignore next */
(cov_5omwpzjcz().s[5]++, express.Router());
const prisma =
/* istanbul ignore next */
(cov_5omwpzjcz().s[6]++, new PrismaClient());

// Configure multer for file uploads
const upload =
/* istanbul ignore next */
(cov_5omwpzjcz().s[7]++, multer({
  storage: multer.memoryStorage(),
  limits: {
    fileSize: 5 * 1024 * 1024 // 5MB limit
  }
}));

// AI code review endpoint
/* istanbul ignore next */
cov_5omwpzjcz().s[8]++;
router.post('/review', upload.single('file'), validateFileUpload, async (req, res) => {
  /* istanbul ignore next */
  cov_5omwpzjcz().f[0]++;
  cov_5omwpzjcz().s[9]++;
  try {
    const {
      buffer,
      originalname
    } =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[10]++, req.file);
    const fileContent =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[11]++, buffer.toString('utf-8'));
    /* istanbul ignore next */
    cov_5omwpzjcz().s[12]++;
    console.log(`🤖 AI reviewing file: ${originalname}`);

    // Perform AI code review
    const reviewResults =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[13]++, await aiReviewer.reviewCode(fileContent, originalname));

    // Save to database
    const result =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[14]++, await prisma.scanResult.create({
      data: {
        filename: originalname,
        fileContent: fileContent,
        scanType: 'ai-review',
        codeReview: reviewResults,
        status: 'completed'
      }
    }));

    // Log the action
    /* istanbul ignore next */
    cov_5omwpzjcz().s[15]++;
    await prisma.auditLog.create({
      data: {
        action: 'ai_review',
        details: {
          filename: originalname,
          issuesFound:
          /* istanbul ignore next */
          (cov_5omwpzjcz().b[0][0]++, reviewResults.issues?.length) ||
          /* istanbul ignore next */
          (cov_5omwpzjcz().b[0][1]++, 0)
        },
        ipAddress: req.ip,
        userAgent: req.get('User-Agent')
      }
    });
    /* istanbul ignore next */
    cov_5omwpzjcz().s[16]++;
    res.json({
      success: true,
      reviewId: result.id,
      filename: originalname,
      review: reviewResults
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5omwpzjcz().s[17]++;
    console.error('AI review error:', error);
    /* istanbul ignore next */
    cov_5omwpzjcz().s[18]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});

// Get review results
/* istanbul ignore next */
cov_5omwpzjcz().s[19]++;
router.get('/review/:id', async (req, res) => {
  /* istanbul ignore next */
  cov_5omwpzjcz().f[1]++;
  cov_5omwpzjcz().s[20]++;
  try {
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[21]++, req.params);
    const result =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[22]++, await prisma.scanResult.findUnique({
      where: {
        id
      },
      select: {
        id: true,
        filename: true,
        codeReview: true,
        status: true,
        createdAt: true
      }
    }));
    /* istanbul ignore next */
    cov_5omwpzjcz().s[23]++;
    if (!result) {
      /* istanbul ignore next */
      cov_5omwpzjcz().b[1][0]++;
      cov_5omwpzjcz().s[24]++;
      return res.status(404).json({
        error: 'Review result not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_5omwpzjcz().b[1][1]++;
    }
    cov_5omwpzjcz().s[25]++;
    res.json(result);
  } catch (error) {
    /* istanbul ignore next */
    cov_5omwpzjcz().s[26]++;
    console.error('Get review result error:', error);
    /* istanbul ignore next */
    cov_5omwpzjcz().s[27]++;
    res.status(500).json({
      error: error.message
    });
  }
});

// Refactor code suggestions
/* istanbul ignore next */
cov_5omwpzjcz().s[28]++;
router.post('/refactor', upload.single('file'), validateFileUpload, async (req, res) => {
  /* istanbul ignore next */
  cov_5omwpzjcz().f[2]++;
  cov_5omwpzjcz().s[29]++;
  try {
    const {
      buffer,
      originalname
    } =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[30]++, req.file);
    const fileContent =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[31]++, buffer.toString('utf-8'));
    const {
      focusArea
    } =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[32]++, req.body); // 'performance', 'readability', 'security', etc.
    /* istanbul ignore next */
    cov_5omwpzjcz().s[33]++;
    console.log(`🔧 AI refactoring file: ${originalname} (focus: ${
    /* istanbul ignore next */
    (cov_5omwpzjcz().b[2][0]++, focusArea) ||
    /* istanbul ignore next */
    (cov_5omwpzjcz().b[2][1]++, 'general')})`);
    const refactorResults =
    /* istanbul ignore next */
    (cov_5omwpzjcz().s[34]++, await aiReviewer.suggestRefactoring(fileContent, originalname, focusArea));
    /* istanbul ignore next */
    cov_5omwpzjcz().s[35]++;
    res.json({
      success: true,
      filename: originalname,
      refactoring: refactorResults
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5omwpzjcz().s[36]++;
    console.error('AI refactor error:', error);
    /* istanbul ignore next */
    cov_5omwpzjcz().s[37]++;
    res.status(500).json({
      success: false,
      error: error.message
    });
  }
});
/* istanbul ignore next */
cov_5omwpzjcz().s[38]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,