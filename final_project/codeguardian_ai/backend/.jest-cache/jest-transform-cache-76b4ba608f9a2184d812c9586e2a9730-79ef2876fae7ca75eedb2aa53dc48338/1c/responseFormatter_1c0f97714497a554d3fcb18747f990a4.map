{"version":3,"names":["cov_2l4pgtqygk","actualCoverage","ResponseFormatter","success","message","b","data","f","s","timestamp","Date","toISOString","error","statusCode","errorCode","details","statusCodeMap","finalErrorCode","paginated","pagination","totalPages","Math","ceil","total","limit","hasNext","page","hasPrev","metadata","count","length","hasData","validation","errors","errorArray","Array","isArray","errorCount","created","resource","location","response","updated","deleted","module","exports"],"sources":["responseFormatter.js"],"sourcesContent":["// Backend Utilities - Response Formatters\nclass ResponseFormatter {\n  static success(message = 'Success', data = null) {\n    return {\n      success: true,\n      message,\n      data,\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  static error(message, statusCode = 500, errorCode = null, details = null) {\n    // Map status codes to error codes if not provided\n    const statusCodeMap = {\n      400: 'BAD_REQUEST',\n      401: 'UNAUTHORIZED',\n      403: 'FORBIDDEN',\n      404: 'NOT_FOUND',\n      422: 'VALIDATION_ERROR',\n      500: 'INTERNAL_ERROR'\n    };\n\n    const finalErrorCode = errorCode || statusCodeMap[statusCode] || 'UNKNOWN_ERROR';\n\n    return {\n      success: false,\n      message,\n      statusCode,\n      errorCode: finalErrorCode,\n      details,\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  static paginated(data, pagination, message = 'Data retrieved successfully') {\n    const totalPages = Math.ceil(pagination.total / pagination.limit);\n    const hasNext = pagination.page < totalPages;\n    const hasPrev = pagination.page > 1;\n\n    return {\n      success: true,\n      message,\n      data,\n      pagination: {\n        page: pagination.page,\n        limit: pagination.limit,\n        total: pagination.total,\n        totalPages,\n        hasNext,\n        hasPrev\n      },\n      metadata: {\n        count: data.length,\n        hasData: data.length > 0\n      },\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  static validation(errors) {\n    const errorArray = Array.isArray(errors) ? errors : [errors];\n    \n    return {\n      success: false,\n      message: 'Validation failed',\n      statusCode: 422,\n      errorCode: 'VALIDATION_ERROR',\n      details: {\n        errors: errorArray,\n        errorCount: errorArray.length\n      },\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  static created(resource, location = null) {\n    const response = {\n      success: true,\n      message: 'Resource created successfully',\n      statusCode: 201,\n      data: resource,\n      timestamp: new Date().toISOString()\n    };\n\n    if (location) {\n      response.location = location;\n    }\n\n    return response;\n  }\n\n  static updated(resource) {\n    return {\n      success: true,\n      message: 'Resource updated successfully',\n      statusCode: 200,\n      data: resource,\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  static deleted(message = 'Resource deleted successfully') {\n    return {\n      success: true,\n      message,\n      statusCode: 200,\n      data: null,\n      timestamp: new Date().toISOString()\n    };\n  }\n}\n\nmodule.exports = ResponseFormatter;\n"],"mappings":"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","ignoreList":[]}