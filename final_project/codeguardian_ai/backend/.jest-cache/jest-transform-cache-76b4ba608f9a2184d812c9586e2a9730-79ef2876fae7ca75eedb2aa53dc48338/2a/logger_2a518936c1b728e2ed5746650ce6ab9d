18b34d1f94128ebb1cb434c6a01300b2
/* istanbul ignore next */
function cov_1ynukautvj() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/logger.js";
  var hash = "d0ffa6fa729d1623191eb440c16b132662934f41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/logger.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "2": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "3": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "4": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "5": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 37
        }
      },
      "6": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "7": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "8": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "9": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "10": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "11": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "12": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        },
        loc: {
          start: {
            line: 31,
            column: 42
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 48,
            column: 3
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 51,
            column: 3
          }
        },
        loc: {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 69,
            column: 3
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 52,
            column: 12
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 24
          }
        },
        loc: {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 65,
            column: 7
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 34
          }
        }, {
          start: {
            line: 7,
            column: 38
          },
          end: {
            line: 7,
            column: 44
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 25
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 29
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 40
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 37,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 37,
            column: 7
          }
        }, {
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 37,
            column: 14
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 25
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 26
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0],
      "6": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0ffa6fa729d1623191eb440c16b132662934f41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ynukautvj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ynukautvj();
// Backend Utilities - Logger
const winston =
/* istanbul ignore next */
(cov_1ynukautvj().s[0]++, require('winston'));
class Logger {
  constructor() {
    /* istanbul ignore next */
    cov_1ynukautvj().f[0]++;
    cov_1ynukautvj().s[1]++;
    this.logger = winston.createLogger({
      level:
      /* istanbul ignore next */
      (cov_1ynukautvj().b[0][0]++, process.env.LOG_LEVEL) ||
      /* istanbul ignore next */
      (cov_1ynukautvj().b[0][1]++, 'info'),
      format: winston.format.combine(winston.format.timestamp(), winston.format.errors({
        stack: true
      }), winston.format.json()),
      defaultMeta: {
        service: 'codeguardian-ai'
      },
      transports: [new winston.transports.File({
        filename: 'logs/error.log',
        level: 'error'
      }), new winston.transports.File({
        filename: 'logs/combined.log'
      }), new winston.transports.Console({
        format: winston.format.combine(winston.format.colorize(), winston.format.simple())
      })]
    });
  }
  info(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[1]++;
    cov_1ynukautvj().s[2]++;
    this.logger.info(message, meta);
  }
  error(message, error =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[2][0]++, null), meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[2]++;
    cov_1ynukautvj().s[3]++;
    this.logger.error(message, {
      error: error ?
      /* istanbul ignore next */
      (cov_1ynukautvj().b[4][0]++, {
        message: error.message,
        stack: error.stack,
        name: error.name
      }) :
      /* istanbul ignore next */
      (cov_1ynukautvj().b[4][1]++, null),
      ...meta
    });
  }
  warn(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[3]++;
    cov_1ynukautvj().s[4]++;
    this.logger.warn(message, meta);
  }
  debug(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[4]++;
    cov_1ynukautvj().s[5]++;
    this.logger.debug(message, meta);
  }

  // Create request logger middleware
  createRequestLogger() {
    /* istanbul ignore next */
    cov_1ynukautvj().f[5]++;
    cov_1ynukautvj().s[6]++;
    return (req, res, next) => {
      /* istanbul ignore next */
      cov_1ynukautvj().f[6]++;
      const start =
      /* istanbul ignore next */
      (cov_1ynukautvj().s[7]++, Date.now());
      /* istanbul ignore next */
      cov_1ynukautvj().s[8]++;
      res.on('finish', () => {
        /* istanbul ignore next */
        cov_1ynukautvj().f[7]++;
        const duration =
        /* istanbul ignore next */
        (cov_1ynukautvj().s[9]++, Date.now() - start);
        /* istanbul ignore next */
        cov_1ynukautvj().s[10]++;
        this.info('HTTP Request', {
          method: req.method,
          url: req.originalUrl,
          statusCode: res.statusCode,
          duration: `${duration}ms`,
          userAgent: req.get('User-Agent'),
          ip: req.ip
        });
      });
      /* istanbul ignore next */
      cov_1ynukautvj().s[11]++;
      next();
    };
  }
}

// Export singleton instance
/* istanbul ignore next */
cov_1ynukautvj().s[12]++;
module.exports = new Logger();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,