ee3e5c855419c4efd2c7801641e8ddfb
/* istanbul ignore next */
function cov_1jpkv5el8b() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/securityScanner.refactored.js";
  var hash = "79d17d58ff7083b8f5a6c21aa2dfbe41c011eab2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/services/securityScanner.refactored.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 26
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "1": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 59
        }
      },
      "2": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 41
        }
      },
      "3": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "10": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "11": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "12": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "13": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "14": {
        start: {
          line: 238,
          column: 30
        },
        end: {
          line: 238,
          column: 32
        }
      },
      "15": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 243,
          column: 7
        }
      },
      "16": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "17": {
        start: {
          line: 247,
          column: 30
        },
        end: {
          line: 247,
          column: 83
        }
      },
      "18": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 47
        }
      },
      "19": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 68
        }
      },
      "20": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "21": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "22": {
        start: {
          line: 256,
          column: 22
        },
        end: {
          line: 256,
          column: 67
        }
      },
      "23": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 83
        }
      },
      "24": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 258,
          column: 64
        }
      },
      "25": {
        start: {
          line: 260,
          column: 21
        },
        end: {
          line: 267,
          column: 7
        }
      },
      "26": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "27": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 92
        }
      },
      "28": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 55
        }
      },
      "29": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 279,
          column: 99
        }
      },
      "30": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 30
        }
      },
      "31": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "32": {
        start: {
          line: 291,
          column: 6
        },
        end: {
          line: 309,
          column: 7
        }
      },
      "33": {
        start: {
          line: 292,
          column: 27
        },
        end: {
          line: 292,
          column: 64
        }
      },
      "34": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 67
        }
      },
      "35": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "36": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 27
        }
      },
      "37": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 75
        }
      },
      "38": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 326,
          column: 55
        }
      },
      "39": {
        start: {
          line: 333,
          column: 18
        },
        end: {
          line: 333,
          column: 34
        }
      },
      "40": {
        start: {
          line: 334,
          column: 18
        },
        end: {
          line: 334,
          column: 60
        }
      },
      "41": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 65
        }
      },
      "42": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 341,
          column: 6
        }
      },
      "43": {
        start: {
          line: 348,
          column: 21
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "44": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 60
        }
      },
      "45": {
        start: {
          line: 351,
          column: 42
        },
        end: {
          line: 351,
          column: 60
        }
      },
      "46": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 352,
          column: 39
        }
      },
      "47": {
        start: {
          line: 352,
          column: 21
        },
        end: {
          line: 352,
          column: 39
        }
      },
      "48": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 353,
          column: 48
        }
      },
      "49": {
        start: {
          line: 353,
          column: 30
        },
        end: {
          line: 353,
          column: 48
        }
      },
      "50": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 35
        }
      },
      "51": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "52": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 372,
          column: 92
        }
      },
      "53": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 47
        }
      },
      "54": {
        start: {
          line: 379,
          column: 38
        },
        end: {
          line: 379,
          column: 47
        }
      },
      "55": {
        start: {
          line: 381,
          column: 24
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "56": {
        start: {
          line: 382,
          column: 6
        },
        end: {
          line: 382,
          column: 62
        }
      },
      "57": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 74
        }
      },
      "58": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 387,
          column: 57
        }
      },
      "59": {
        start: {
          line: 394,
          column: 27
        },
        end: {
          line: 397,
          column: 10
        }
      },
      "60": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 57
        }
      },
      "61": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 17
        }
      },
      "62": {
        start: {
          line: 399,
          column: 27
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "63": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 57
        }
      },
      "64": {
        start: {
          line: 401,
          column: 6
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "65": {
        start: {
          line: 404,
          column: 22
        },
        end: {
          line: 409,
          column: 10
        }
      },
      "66": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 407,
          column: 7
        }
      },
      "67": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 49
        }
      },
      "68": {
        start: {
          line: 408,
          column: 6
        },
        end: {
          line: 408,
          column: 17
        }
      },
      "69": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 421,
          column: 6
        }
      },
      "70": {
        start: {
          line: 428,
          column: 22
        },
        end: {
          line: 432,
          column: 10
        }
      },
      "71": {
        start: {
          line: 429,
          column: 18
        },
        end: {
          line: 429,
          column: 49
        }
      },
      "72": {
        start: {
          line: 430,
          column: 6
        },
        end: {
          line: 430,
          column: 37
        }
      },
      "73": {
        start: {
          line: 431,
          column: 6
        },
        end: {
          line: 431,
          column: 17
        }
      },
      "74": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "75": {
        start: {
          line: 435,
          column: 28
        },
        end: {
          line: 435,
          column: 33
        }
      },
      "76": {
        start: {
          line: 438,
          column: 33
        },
        end: {
          line: 438,
          column: 49
        }
      },
      "77": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 41
        }
      },
      "78": {
        start: {
          line: 447,
          column: 28
        },
        end: {
          line: 447,
          column: 30
        }
      },
      "79": {
        start: {
          line: 448,
          column: 27
        },
        end: {
          line: 448,
          column: 68
        }
      },
      "80": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "81": {
        start: {
          line: 451,
          column: 32
        },
        end: {
          line: 451,
          column: 79
        }
      },
      "82": {
        start: {
          line: 451,
          column: 50
        },
        end: {
          line: 451,
          column: 71
        }
      },
      "83": {
        start: {
          line: 452,
          column: 23
        },
        end: {
          line: 453,
          column: 93
        }
      },
      "84": {
        start: {
          line: 453,
          column: 39
        },
        end: {
          line: 453,
          column: 62
        }
      },
      "85": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 462,
          column: 9
        }
      },
      "86": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 468,
          column: 7
        }
      },
      "87": {
        start: {
          line: 466,
          column: 28
        },
        end: {
          line: 466,
          column: 58
        }
      },
      "88": {
        start: {
          line: 467,
          column: 6
        },
        end: {
          line: 467,
          column: 67
        }
      },
      "89": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 480,
          column: 11
        }
      },
      "90": {
        start: {
          line: 476,
          column: 20
        },
        end: {
          line: 476,
          column: 29
        }
      },
      "91": {
        start: {
          line: 477,
          column: 6
        },
        end: {
          line: 477,
          column: 42
        }
      },
      "92": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 478,
          column: 31
        }
      },
      "93": {
        start: {
          line: 479,
          column: 6
        },
        end: {
          line: 479,
          column: 20
        }
      },
      "94": {
        start: {
          line: 487,
          column: 19
        },
        end: {
          line: 494,
          column: 5
        }
      },
      "95": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 495,
          column: 60
        }
      },
      "96": {
        start: {
          line: 502,
          column: 25
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "97": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 510,
          column: 95
        }
      },
      "98": {
        start: {
          line: 517,
          column: 24
        },
        end: {
          line: 517,
          column: 70
        }
      },
      "99": {
        start: {
          line: 517,
          column: 61
        },
        end: {
          line: 517,
          column: 67
        }
      },
      "100": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 523,
          column: 8
        }
      },
      "101": {
        start: {
          line: 519,
          column: 36
        },
        end: {
          line: 523,
          column: 5
        }
      },
      "102": {
        start: {
          line: 521,
          column: 49
        },
        end: {
          line: 521,
          column: 64
        }
      },
      "103": {
        start: {
          line: 521,
          column: 75
        },
        end: {
          line: 521,
          column: 81
        }
      },
      "104": {
        start: {
          line: 522,
          column: 42
        },
        end: {
          line: 522,
          column: 57
        }
      },
      "105": {
        start: {
          line: 527,
          column: 0
        },
        end: {
          line: 527,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 226,
            column: 3
          }
        },
        loc: {
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 281,
            column: 3
          }
        },
        line: 226
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 3
          }
        },
        loc: {
          start: {
            line: 286,
            column: 51
          },
          end: {
            line: 313,
            column: 3
          }
        },
        line: 286
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 318,
            column: 2
          },
          end: {
            line: 318,
            column: 3
          }
        },
        loc: {
          start: {
            line: 318,
            column: 28
          },
          end: {
            line: 320,
            column: 3
          }
        },
        line: 318
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 325,
            column: 2
          },
          end: {
            line: 325,
            column: 3
          }
        },
        loc: {
          start: {
            line: 325,
            column: 29
          },
          end: {
            line: 327,
            column: 3
          }
        },
        line: 325
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 332,
            column: 3
          }
        },
        loc: {
          start: {
            line: 332,
            column: 54
          },
          end: {
            line: 342,
            column: 3
          }
        },
        line: 332
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 347,
            column: 2
          },
          end: {
            line: 347,
            column: 3
          }
        },
        loc: {
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 356,
            column: 3
          }
        },
        line: 347
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 361,
            column: 2
          },
          end: {
            line: 361,
            column: 3
          }
        },
        loc: {
          start: {
            line: 361,
            column: 47
          },
          end: {
            line: 373,
            column: 3
          }
        },
        line: 361
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 378,
            column: 3
          }
        },
        loc: {
          start: {
            line: 378,
            column: 38
          },
          end: {
            line: 388,
            column: 3
          }
        },
        line: 378
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 381,
            column: 47
          },
          end: {
            line: 381,
            column: 48
          }
        },
        loc: {
          start: {
            line: 381,
            column: 62
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 381
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 393,
            column: 2
          },
          end: {
            line: 393,
            column: 3
          }
        },
        loc: {
          start: {
            line: 393,
            column: 43
          },
          end: {
            line: 422,
            column: 3
          }
        },
        line: 393
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 394,
            column: 50
          },
          end: {
            line: 394,
            column: 51
          }
        },
        loc: {
          start: {
            line: 394,
            column: 65
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 394
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 399,
            column: 50
          },
          end: {
            line: 399,
            column: 51
          }
        },
        loc: {
          start: {
            line: 399,
            column: 65
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 399
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 404,
            column: 45
          },
          end: {
            line: 404,
            column: 46
          }
        },
        loc: {
          start: {
            line: 404,
            column: 60
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 404
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 427,
            column: 2
          },
          end: {
            line: 427,
            column: 3
          }
        },
        loc: {
          start: {
            line: 427,
            column: 43
          },
          end: {
            line: 441,
            column: 3
          }
        },
        line: 427
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 428,
            column: 45
          },
          end: {
            line: 428,
            column: 46
          }
        },
        loc: {
          start: {
            line: 428,
            column: 60
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 428
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 435,
            column: 12
          },
          end: {
            line: 435,
            column: 13
          }
        },
        loc: {
          start: {
            line: 435,
            column: 28
          },
          end: {
            line: 435,
            column: 33
          }
        },
        line: 435
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 437,
            column: 11
          },
          end: {
            line: 437,
            column: 12
          }
        },
        loc: {
          start: {
            line: 437,
            column: 31
          },
          end: {
            line: 440,
            column: 7
          }
        },
        line: 437
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 446,
            column: 2
          },
          end: {
            line: 446,
            column: 3
          }
        },
        loc: {
          start: {
            line: 446,
            column: 51
          },
          end: {
            line: 469,
            column: 3
          }
        },
        line: 446
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 451,
            column: 45
          },
          end: {
            line: 451,
            column: 46
          }
        },
        loc: {
          start: {
            line: 451,
            column: 50
          },
          end: {
            line: 451,
            column: 71
          }
        },
        line: 451
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 453,
            column: 34
          },
          end: {
            line: 453,
            column: 35
          }
        },
        loc: {
          start: {
            line: 453,
            column: 39
          },
          end: {
            line: 453,
            column: 62
          }
        },
        line: 453
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 465,
            column: 32
          },
          end: {
            line: 465,
            column: 33
          }
        },
        loc: {
          start: {
            line: 465,
            column: 42
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 465
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 474,
            column: 2
          },
          end: {
            line: 474,
            column: 3
          }
        },
        loc: {
          start: {
            line: 474,
            column: 22
          },
          end: {
            line: 481,
            column: 3
          }
        },
        line: 474
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 475,
            column: 24
          },
          end: {
            line: 475,
            column: 25
          }
        },
        loc: {
          start: {
            line: 475,
            column: 42
          },
          end: {
            line: 480,
            column: 5
          }
        },
        line: 475
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 486,
            column: 2
          },
          end: {
            line: 486,
            column: 3
          }
        },
        loc: {
          start: {
            line: 486,
            column: 43
          },
          end: {
            line: 496,
            column: 3
          }
        },
        line: 486
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 501,
            column: 2
          },
          end: {
            line: 501,
            column: 3
          }
        },
        loc: {
          start: {
            line: 501,
            column: 49
          },
          end: {
            line: 511,
            column: 3
          }
        },
        line: 501
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 516,
            column: 2
          },
          end: {
            line: 516,
            column: 3
          }
        },
        loc: {
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 524,
            column: 3
          }
        },
        line: 516
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 517,
            column: 56
          },
          end: {
            line: 517,
            column: 57
          }
        },
        loc: {
          start: {
            line: 517,
            column: 61
          },
          end: {
            line: 517,
            column: 67
          }
        },
        line: 517
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 519,
            column: 27
          },
          end: {
            line: 519,
            column: 28
          }
        },
        loc: {
          start: {
            line: 519,
            column: 36
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 519
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 521,
            column: 44
          },
          end: {
            line: 521,
            column: 45
          }
        },
        loc: {
          start: {
            line: 521,
            column: 49
          },
          end: {
            line: 521,
            column: 64
          }
        },
        line: 521
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 521,
            column: 70
          },
          end: {
            line: 521,
            column: 71
          }
        },
        loc: {
          start: {
            line: 521,
            column: 75
          },
          end: {
            line: 521,
            column: 81
          }
        },
        line: 521
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 522,
            column: 37
          },
          end: {
            line: 522,
            column: 38
          }
        },
        loc: {
          start: {
            line: 522,
            column: 42
          },
          end: {
            line: 522,
            column: 57
          }
        },
        line: 522
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 29
          },
          end: {
            line: 226,
            column: 31
          }
        }],
        line: 226
      },
      "1": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "2": {
        loc: {
          start: {
            line: 332,
            column: 36
          },
          end: {
            line: 332,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 332,
            column: 51
          },
          end: {
            line: 332,
            column: 52
          }
        }],
        line: 332
      },
      "3": {
        loc: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "4": {
        loc: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "5": {
        loc: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "6": {
        loc: {
          start: {
            line: 372,
            column: 11
          },
          end: {
            line: 372,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 11
          },
          end: {
            line: 372,
            column: 45
          }
        }, {
          start: {
            line: 372,
            column: 49
          },
          end: {
            line: 372,
            column: 91
          }
        }],
        line: 372
      },
      "7": {
        loc: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "8": {
        loc: {
          start: {
            line: 382,
            column: 20
          },
          end: {
            line: 382,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 20
          },
          end: {
            line: 382,
            column: 55
          }
        }, {
          start: {
            line: 382,
            column: 59
          },
          end: {
            line: 382,
            column: 60
          }
        }],
        line: 382
      },
      "9": {
        loc: {
          start: {
            line: 395,
            column: 28
          },
          end: {
            line: 395,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 28
          },
          end: {
            line: 395,
            column: 46
          }
        }, {
          start: {
            line: 395,
            column: 50
          },
          end: {
            line: 395,
            column: 51
          }
        }],
        line: 395
      },
      "10": {
        loc: {
          start: {
            line: 400,
            column: 28
          },
          end: {
            line: 400,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 28
          },
          end: {
            line: 400,
            column: 46
          }
        }, {
          start: {
            line: 400,
            column: 50
          },
          end: {
            line: 400,
            column: 51
          }
        }],
        line: 400
      },
      "11": {
        loc: {
          start: {
            line: 405,
            column: 6
          },
          end: {
            line: 407,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 6
          },
          end: {
            line: 407,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "12": {
        loc: {
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 406,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 25
          },
          end: {
            line: 406,
            column: 38
          }
        }, {
          start: {
            line: 406,
            column: 42
          },
          end: {
            line: 406,
            column: 43
          }
        }],
        line: 406
      },
      "13": {
        loc: {
          start: {
            line: 414,
            column: 14
          },
          end: {
            line: 414,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 14
          },
          end: {
            line: 414,
            column: 33
          }
        }, {
          start: {
            line: 414,
            column: 37
          },
          end: {
            line: 414,
            column: 38
          }
        }],
        line: 414
      },
      "14": {
        loc: {
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 415,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 415,
            column: 37
          }
        }, {
          start: {
            line: 415,
            column: 41
          },
          end: {
            line: 415,
            column: 42
          }
        }],
        line: 415
      },
      "15": {
        loc: {
          start: {
            line: 416,
            column: 13
          },
          end: {
            line: 416,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 13
          },
          end: {
            line: 416,
            column: 31
          }
        }, {
          start: {
            line: 416,
            column: 35
          },
          end: {
            line: 416,
            column: 36
          }
        }],
        line: 416
      },
      "16": {
        loc: {
          start: {
            line: 427,
            column: 32
          },
          end: {
            line: 427,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 40
          },
          end: {
            line: 427,
            column: 41
          }
        }],
        line: 427
      },
      "17": {
        loc: {
          start: {
            line: 430,
            column: 18
          },
          end: {
            line: 430,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 18
          },
          end: {
            line: 430,
            column: 26
          }
        }, {
          start: {
            line: 430,
            column: 30
          },
          end: {
            line: 430,
            column: 31
          }
        }],
        line: 430
      },
      "18": {
        loc: {
          start: {
            line: 452,
            column: 23
          },
          end: {
            line: 453,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 47
          },
          end: {
            line: 452,
            column: 53
          }
        }, {
          start: {
            line: 453,
            column: 21
          },
          end: {
            line: 453,
            column: 93
          }
        }],
        line: 452
      },
      "19": {
        loc: {
          start: {
            line: 453,
            column: 21
          },
          end: {
            line: 453,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 77
          },
          end: {
            line: 453,
            column: 85
          }
        }, {
          start: {
            line: 453,
            column: 88
          },
          end: {
            line: 453,
            column: 93
          }
        }],
        line: 453
      },
      "20": {
        loc: {
          start: {
            line: 477,
            column: 22
          },
          end: {
            line: 477,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 22
          },
          end: {
            line: 477,
            column: 35
          }
        }, {
          start: {
            line: 477,
            column: 39
          },
          end: {
            line: 477,
            column: 41
          }
        }],
        line: 477
      },
      "21": {
        loc: {
          start: {
            line: 495,
            column: 11
          },
          end: {
            line: 495,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 11
          },
          end: {
            line: 495,
            column: 27
          }
        }, {
          start: {
            line: 495,
            column: 31
          },
          end: {
            line: 495,
            column: 59
          }
        }],
        line: 495
      },
      "22": {
        loc: {
          start: {
            line: 510,
            column: 11
          },
          end: {
            line: 510,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 11
          },
          end: {
            line: 510,
            column: 33
          }
        }, {
          start: {
            line: 510,
            column: 37
          },
          end: {
            line: 510,
            column: 94
          }
        }],
        line: 510
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79d17d58ff7083b8f5a6c21aa2dfbe41c011eab2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jpkv5el8b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jpkv5el8b();
/**
 * Enhanced Security Scanner Service
 * Detects various security vulnerabilities in code with improved architecture
 */

const ResponseFormatter =
/* istanbul ignore next */
(cov_1jpkv5el8b().s[0]++, require('../utils/responseFormatter'));
const ValidationUtils =
/* istanbul ignore next */
(cov_1jpkv5el8b().s[1]++, require('../utils/validationUtils'));
const Logger =
/* istanbul ignore next */
(cov_1jpkv5el8b().s[2]++, require('../utils/logger'));
const ErrorHandler =
/* istanbul ignore next */
(cov_1jpkv5el8b().s[3]++, require('../utils/errorHandler'));
class SecurityScanner {
  constructor() {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[0]++;
    cov_1jpkv5el8b().s[4]++;
    this.logger = Logger;
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[5]++;
    this.validationUtils = ValidationUtils;
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[6]++;
    this.responseFormatter = ResponseFormatter;

    // Enhanced vulnerability patterns with better categorization
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[7]++;
    this.vulnerabilityPatterns = this.initializePatterns();
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[8]++;
    this.severityWeights = {
      HIGH: 10,
      MEDIUM: 5,
      LOW: 1
    };
  }
  initializePatterns() {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[1]++;
    cov_1jpkv5el8b().s[9]++;
    return {
      hardcodedSecrets: {
        category: 'Secrets Management',
        patterns: [{
          name: 'API Key',
          regex: /(?:api[_-]?key|apikey)\s*[:=]\s*["']([a-zA-Z0-9_-]{20,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded API key detected - Move to environment variables',
          cwe: 'CWE-798'
        }, {
          name: 'Password',
          regex: /(?:password|pwd|pass)\s*[:=]\s*["']([^"']{6,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded password detected - Use secure credential storage',
          cwe: 'CWE-798'
        }, {
          name: 'Secret Key',
          regex: /(?:secret[_-]?key|secretkey)\s*[:=]\s*["']([a-zA-Z0-9_-]{16,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded secret key detected - Implement secrets management',
          cwe: 'CWE-798'
        }, {
          name: 'Database URL',
          regex: /(?:database[_-]?url|db[_-]?url)\s*[:=]\s*["']([^"']+)["']/gi,
          severity: 'MEDIUM',
          description: 'Hardcoded database URL detected - Use environment configuration',
          cwe: 'CWE-798'
        }, {
          name: 'JWT Secret',
          regex: /(?:jwt[_-]?secret)\s*[:=]\s*["']([a-zA-Z0-9_-]{16,})["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded JWT secret detected - Use secure key management',
          cwe: 'CWE-798'
        }, {
          name: 'Private Key',
          regex: /-----BEGIN\s+(RSA\s+)?PRIVATE KEY-----/gi,
          severity: 'HIGH',
          description: 'Private key embedded in code - Move to secure storage',
          cwe: 'CWE-798'
        }]
      },
      sqlInjection: {
        category: 'Injection Attacks',
        patterns: [{
          name: 'SQL Injection - String Concatenation',
          regex: /(?:SELECT|INSERT|UPDATE|DELETE)\s+.*\+.*(?:WHERE|VALUES)/gi,
          severity: 'HIGH',
          description: 'Potential SQL injection via string concatenation - Use parameterized queries',
          cwe: 'CWE-89'
        }, {
          name: 'SQL Injection - Template Literals',
          regex: /(?:SELECT|INSERT|UPDATE|DELETE)\s+.*\$\{.*\}/gi,
          severity: 'HIGH',
          description: 'Potential SQL injection via template literals - Use parameterized queries',
          cwe: 'CWE-89'
        }, {
          name: 'Dynamic Query Construction',
          regex: /query\s*\+=?\s*["'`][^"'`]*\$\{/gi,
          severity: 'MEDIUM',
          description: 'Dynamic query construction detected - Consider using ORM or query builders',
          cwe: 'CWE-89'
        }]
      },
      xss: {
        category: 'Cross-Site Scripting',
        patterns: [{
          name: 'innerHTML Assignment',
          regex: /\.innerHTML\s*=\s*(?!['"]).+/gi,
          severity: 'MEDIUM',
          description: 'Direct innerHTML assignment - Use textContent or sanitize input',
          cwe: 'CWE-79'
        }, {
          name: 'document.write Usage',
          regex: /document\.write\s*\(/gi,
          severity: 'MEDIUM',
          description: 'document.write usage detected - Consider safer alternatives',
          cwe: 'CWE-79'
        }, {
          name: 'eval() Usage',
          regex: /\beval\s*\(/gi,
          severity: 'HIGH',
          description: 'eval() usage detected - Avoid dynamic code execution',
          cwe: 'CWE-95'
        }, {
          name: 'Unsanitized User Input',
          regex: /(?:req\.body|req\.query|req\.params)\.[a-zA-Z_][a-zA-Z0-9_]*(?!\s*=\s*sanitize)/gi,
          severity: 'MEDIUM',
          description: 'Potentially unsanitized user input - Implement input validation',
          cwe: 'CWE-20'
        }]
      },
      weakCrypto: {
        category: 'Cryptographic Issues',
        patterns: [{
          name: 'MD5 Usage',
          regex: /\bmd5\b/gi,
          severity: 'HIGH',
          description: 'MD5 cryptographic hash detected - Use SHA-256 or stronger',
          cwe: 'CWE-327'
        }, {
          name: 'SHA1 Usage',
          regex: /\bsha1\b/gi,
          severity: 'MEDIUM',
          description: 'SHA1 cryptographic hash detected - Consider SHA-256 or stronger',
          cwe: 'CWE-327'
        }, {
          name: 'Weak Random Generation',
          regex: /Math\.random\(\)/gi,
          severity: 'MEDIUM',
          description: 'Math.random() used - Use crypto.randomBytes() for security-sensitive operations',
          cwe: 'CWE-338'
        }, {
          name: 'DES/3DES Usage',
          regex: /\b(?:des|3des|tripledes)\b/gi,
          severity: 'HIGH',
          description: 'Weak encryption algorithm detected - Use AES-256 or stronger',
          cwe: 'CWE-327'
        }]
      },
      insecureStorage: {
        category: 'Insecure Storage',
        patterns: [{
          name: 'localStorage Sensitive Data',
          regex: /localStorage\.setItem\s*\(\s*["'][^"']*(?:token|password|secret|key)["']/gi,
          severity: 'MEDIUM',
          description: 'Sensitive data stored in localStorage - Consider secure storage alternatives',
          cwe: 'CWE-922'
        }, {
          name: 'sessionStorage Sensitive Data',
          regex: /sessionStorage\.setItem\s*\(\s*["'][^"']*(?:token|password|secret|key)["']/gi,
          severity: 'MEDIUM',
          description: 'Sensitive data stored in sessionStorage - Consider secure storage alternatives',
          cwe: 'CWE-922'
        }, {
          name: 'Cookie without Secure Flag',
          regex: /document\.cookie\s*=\s*[^;]*(?!.*secure)/gi,
          severity: 'MEDIUM',
          description: 'Cookie set without secure flag - Add secure flag for HTTPS',
          cwe: 'CWE-614'
        }]
      },
      authenticationIssues: {
        category: 'Authentication & Authorization',
        patterns: [{
          name: 'Missing Authentication Check',
          regex: /app\.(get|post|put|delete)\s*\(\s*["'][^"']*["']\s*,\s*(?!.*auth)/gi,
          severity: 'MEDIUM',
          description: 'Route without authentication middleware - Add authentication checks',
          cwe: 'CWE-306'
        }, {
          name: 'Hardcoded JWT',
          regex: /jwt\.sign\s*\([^,]*,\s*["'][^"']+["']/gi,
          severity: 'HIGH',
          description: 'Hardcoded JWT secret - Use environment variables',
          cwe: 'CWE-798'
        }, {
          name: 'Weak JWT Algorithm',
          regex: /algorithm\s*:\s*["'](?:HS256|none)["']/gi,
          severity: 'MEDIUM',
          description: 'Weak JWT algorithm - Consider RS256 or ES256',
          cwe: 'CWE-327'
        }]
      }
    };
  }

  /**
   * Enhanced scan method with better error handling and logging
   */
  async scan(code, options =
  /* istanbul ignore next */
  (cov_1jpkv5el8b().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[2]++;
    cov_1jpkv5el8b().s[10]++;
    try {
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[11]++;
      this.logger.info('Starting security scan', {
        codeLength: code.length,
        options
      });

      // Validate input
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[12]++;
      if (!this.validationUtils.validateCodeInput(code)) {
        /* istanbul ignore next */
        cov_1jpkv5el8b().b[1][0]++;
        cov_1jpkv5el8b().s[13]++;
        throw new Error('Invalid code input provided');
      } else
      /* istanbul ignore next */
      {
        cov_1jpkv5el8b().b[1][1]++;
      }
      const vulnerabilities =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[14]++, []);
      const scanMetrics =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[15]++, {
        startTime: Date.now(),
        linesScanned: code.split('\n').length,
        patternsChecked: 0
      });

      // Scan for each vulnerability category
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[16]++;
      for (const [category, categoryData] of Object.entries(this.vulnerabilityPatterns)) {
        const categoryVulns =
        /* istanbul ignore next */
        (cov_1jpkv5el8b().s[17]++, await this.scanCategory(code, category, categoryData));
        /* istanbul ignore next */
        cov_1jpkv5el8b().s[18]++;
        vulnerabilities.push(...categoryVulns);
        /* istanbul ignore next */
        cov_1jpkv5el8b().s[19]++;
        scanMetrics.patternsChecked += categoryData.patterns.length;
      }
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[20]++;
      scanMetrics.endTime = Date.now();
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[21]++;
      scanMetrics.duration = scanMetrics.endTime - scanMetrics.startTime;

      // Generate enhanced results
      const summary =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[22]++, this.generateEnhancedSummary(vulnerabilities));
      const recommendations =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[23]++, this.generateDetailedRecommendations(vulnerabilities));
      const riskScore =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[24]++, this.calculateRiskScore(vulnerabilities));
      const result =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[25]++, {
        vulnerabilities,
        summary,
        recommendations,
        riskScore,
        scanMetrics,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[26]++;
      this.logger.info('Security scan completed', {
        totalVulnerabilities: vulnerabilities.length,
        riskScore,
        duration: scanMetrics.duration
      });
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[27]++;
      return this.responseFormatter.success(result, 'Security scan completed successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[28]++;
      this.logger.error('Security scan failed', error);
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[29]++;
      throw ErrorHandler.createError('SCAN_FAILED', `Security scan failed: ${error.message}`, 500);
    }
  }

  /**
   * Scan specific category with enhanced detection
   */
  async scanCategory(code, category, categoryData) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[3]++;
    const vulnerabilities =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[30]++, []);
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[31]++;
    for (const pattern of categoryData.patterns) {
      let match;
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[32]++;
      while ((match = pattern.regex.exec(code)) !== null) {
        const lineNumber =
        /* istanbul ignore next */
        (cov_1jpkv5el8b().s[33]++, this.getLineNumber(code, match.index));
        const contextLines =
        /* istanbul ignore next */
        (cov_1jpkv5el8b().s[34]++, this.getContextLines(code, lineNumber));
        /* istanbul ignore next */
        cov_1jpkv5el8b().s[35]++;
        vulnerabilities.push({
          id: this.generateVulnerabilityId(),
          category,
          type: pattern.name,
          severity: pattern.severity,
          description: pattern.description,
          cwe: pattern.cwe,
          line: lineNumber,
          column: match.index - code.lastIndexOf('\n', match.index) - 1,
          matchedText: match[0],
          context: contextLines,
          recommendation: this.getSpecificRecommendation(pattern.name),
          confidence: this.calculateConfidence(pattern, match)
        });
      }
    }
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[36]++;
    return vulnerabilities;
  }

  /**
   * Generate unique vulnerability ID
   */
  generateVulnerabilityId() {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[4]++;
    cov_1jpkv5el8b().s[37]++;
    return `vuln_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  /**
   * Get line number from character index
   */
  getLineNumber(code, index) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[5]++;
    cov_1jpkv5el8b().s[38]++;
    return code.substring(0, index).split('\n').length;
  }

  /**
   * Get context lines around vulnerability
   */
  getContextLines(code, lineNumber, contextRange =
  /* istanbul ignore next */
  (cov_1jpkv5el8b().b[2][0]++, 2)) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[6]++;
    const lines =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[39]++, code.split('\n'));
    const start =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[40]++, Math.max(0, lineNumber - contextRange - 1));
    const end =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[41]++, Math.min(lines.length, lineNumber + contextRange));
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[42]++;
    return {
      before: lines.slice(start, lineNumber - 1),
      current: lines[lineNumber - 1],
      after: lines.slice(lineNumber, end)
    };
  }

  /**
   * Calculate confidence score for vulnerability detection
   */
  calculateConfidence(pattern, match) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[7]++;
    let confidence =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[43]++, 0.7); // Base confidence

    // Increase confidence based on pattern specificity
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[44]++;
    if (pattern.regex.source.length > 50) {
      /* istanbul ignore next */
      cov_1jpkv5el8b().b[3][0]++;
      cov_1jpkv5el8b().s[45]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1jpkv5el8b().b[3][1]++;
    }
    cov_1jpkv5el8b().s[46]++;
    if (pattern.cwe) {
      /* istanbul ignore next */
      cov_1jpkv5el8b().b[4][0]++;
      cov_1jpkv5el8b().s[47]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1jpkv5el8b().b[4][1]++;
    }
    cov_1jpkv5el8b().s[48]++;
    if (match[0].length > 20) {
      /* istanbul ignore next */
      cov_1jpkv5el8b().b[5][0]++;
      cov_1jpkv5el8b().s[49]++;
      confidence += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_1jpkv5el8b().b[5][1]++;
    }
    cov_1jpkv5el8b().s[50]++;
    return Math.min(1, confidence);
  }

  /**
   * Get specific recommendation for vulnerability type
   */
  getSpecificRecommendation(vulnerabilityType) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[8]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[51]++, {
      'API Key': 'Move API keys to environment variables and use a secrets management system',
      'Password': 'Never hardcode passwords. Use secure credential storage and hashing',
      'SQL Injection - String Concatenation': 'Use parameterized queries or prepared statements',
      'innerHTML Assignment': 'Use textContent or implement proper input sanitization',
      'eval() Usage': 'Replace eval() with safer alternatives like JSON.parse()',
      'MD5 Usage': 'Replace MD5 with SHA-256 or bcrypt for password hashing',
      'Math.random()': 'Use crypto.randomBytes() for cryptographically secure random numbers'
    });
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[52]++;
    return /* istanbul ignore next */(cov_1jpkv5el8b().b[6][0]++, recommendations[vulnerabilityType]) ||
    /* istanbul ignore next */
    (cov_1jpkv5el8b().b[6][1]++, 'Review and remediate this security issue');
  }

  /**
   * Calculate overall risk score
   */
  calculateRiskScore(vulnerabilities) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[9]++;
    cov_1jpkv5el8b().s[53]++;
    if (vulnerabilities.length === 0) {
      /* istanbul ignore next */
      cov_1jpkv5el8b().b[7][0]++;
      cov_1jpkv5el8b().s[54]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1jpkv5el8b().b[7][1]++;
    }
    const totalWeight =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[55]++, vulnerabilities.reduce((sum, vuln) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[10]++;
      cov_1jpkv5el8b().s[56]++;
      return sum + (
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[8][0]++, this.severityWeights[vuln.severity]) ||
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[8][1]++, 1));
    }, 0));

    // Normalize to 0-100 scale
    const maxPossible =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[57]++, vulnerabilities.length * this.severityWeights.HIGH);
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[58]++;
    return Math.round(totalWeight / maxPossible * 100);
  }

  /**
   * Generate enhanced summary with more details
   */
  generateEnhancedSummary(vulnerabilities) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[11]++;
    const severityCounts =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[59]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[12]++;
      cov_1jpkv5el8b().s[60]++;
      acc[vuln.severity] = (
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[9][0]++, acc[vuln.severity]) ||
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[9][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[61]++;
      return acc;
    }, {}));
    const categoryCounts =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[62]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[13]++;
      cov_1jpkv5el8b().s[63]++;
      acc[vuln.category] = (
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[10][0]++, acc[vuln.category]) ||
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[10][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[64]++;
      return acc;
    }, {}));
    const cweCounts =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[65]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[14]++;
      cov_1jpkv5el8b().s[66]++;
      if (vuln.cwe) {
        /* istanbul ignore next */
        cov_1jpkv5el8b().b[11][0]++;
        cov_1jpkv5el8b().s[67]++;
        acc[vuln.cwe] = (
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[12][0]++, acc[vuln.cwe]) ||
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[12][1]++, 0)) + 1;
      } else
      /* istanbul ignore next */
      {
        cov_1jpkv5el8b().b[11][1]++;
      }
      cov_1jpkv5el8b().s[68]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[69]++;
    return {
      totalIssues: vulnerabilities.length,
      severityBreakdown: {
        high:
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[13][0]++, severityCounts.HIGH) ||
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[13][1]++, 0),
        medium:
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[14][0]++, severityCounts.MEDIUM) ||
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[14][1]++, 0),
        low:
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[15][0]++, severityCounts.LOW) ||
        /* istanbul ignore next */
        (cov_1jpkv5el8b().b[15][1]++, 0)
      },
      categoryBreakdown: categoryCounts,
      cweBreakdown: cweCounts,
      topIssues: this.getTopIssues(vulnerabilities, 5)
    };
  }

  /**
   * Get top issues by severity and frequency
   */
  getTopIssues(vulnerabilities, limit =
  /* istanbul ignore next */
  (cov_1jpkv5el8b().b[16][0]++, 5)) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[15]++;
    const issueFreq =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[70]++, vulnerabilities.reduce((acc, vuln) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[16]++;
      const key =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[71]++, `${vuln.type}-${vuln.severity}`);
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[72]++;
      acc[key] = (
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[17][0]++, acc[key]) ||
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[17][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[73]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[74]++;
    return Object.entries(issueFreq).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[17]++;
      cov_1jpkv5el8b().s[75]++;
      return b - a;
    }).slice(0, limit).map(([issue, count]) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[18]++;
      const [type, severity] =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[76]++, issue.split('-'));
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[77]++;
      return {
        type,
        severity,
        count
      };
    });
  }

  /**
   * Generate detailed recommendations with prioritization
   */
  generateDetailedRecommendations(vulnerabilities) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[19]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[78]++, []);
    const categoryGroups =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[79]++, this.groupBy(vulnerabilities, 'category'));
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[80]++;
    for (const [category, vulns] of Object.entries(categoryGroups)) {
      const highSeverityCount =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[81]++, vulns.filter(v => {
        /* istanbul ignore next */
        cov_1jpkv5el8b().f[20]++;
        cov_1jpkv5el8b().s[82]++;
        return v.severity === 'HIGH';
      }).length);
      const priority =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[83]++, highSeverityCount > 0 ?
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[18][0]++, 'HIGH') :
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[18][1]++, vulns.filter(v => {
        /* istanbul ignore next */
        cov_1jpkv5el8b().f[21]++;
        cov_1jpkv5el8b().s[84]++;
        return v.severity === 'MEDIUM';
      }).length > 0 ?
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[19][0]++, 'MEDIUM') :
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[19][1]++, 'LOW')));
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[85]++;
      recommendations.push({
        category,
        priority,
        issueCount: vulns.length,
        title: this.getCategoryRecommendationTitle(category),
        description: this.getCategoryRecommendationDescription(category),
        actionItems: this.getCategoryActionItems(category, vulns)
      });
    }
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[86]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[22]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[87]++, {
        HIGH: 3,
        MEDIUM: 2,
        LOW: 1
      });
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[88]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }

  /**
   * Group array by key
   */
  groupBy(array, key) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[23]++;
    cov_1jpkv5el8b().s[89]++;
    return array.reduce((groups, item) => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[24]++;
      const group =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().s[90]++, item[key]);
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[91]++;
      groups[group] =
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[20][0]++, groups[group]) ||
      /* istanbul ignore next */
      (cov_1jpkv5el8b().b[20][1]++, []);
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[92]++;
      groups[group].push(item);
      /* istanbul ignore next */
      cov_1jpkv5el8b().s[93]++;
      return groups;
    }, {});
  }

  /**
   * Get category-specific recommendation title
   */
  getCategoryRecommendationTitle(category) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[25]++;
    const titles =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[94]++, {
      'Secrets Management': 'Implement Proper Secrets Management',
      'Injection Attacks': 'Prevent Injection Vulnerabilities',
      'Cross-Site Scripting': 'Implement XSS Protection',
      'Cryptographic Issues': 'Upgrade Cryptographic Implementation',
      'Insecure Storage': 'Secure Data Storage Practices',
      'Authentication & Authorization': 'Strengthen Authentication Mechanisms'
    });
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[95]++;
    return /* istanbul ignore next */(cov_1jpkv5el8b().b[21][0]++, titles[category]) ||
    /* istanbul ignore next */
    (cov_1jpkv5el8b().b[21][1]++, `Address ${category} Issues`);
  }

  /**
   * Get category-specific recommendation description
   */
  getCategoryRecommendationDescription(category) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[26]++;
    const descriptions =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[96]++, {
      'Secrets Management': 'Move all hardcoded secrets to environment variables or dedicated secrets management systems',
      'Injection Attacks': 'Implement parameterized queries and input validation to prevent injection attacks',
      'Cross-Site Scripting': 'Sanitize all user inputs and implement proper output encoding',
      'Cryptographic Issues': 'Replace weak cryptographic algorithms with modern, secure alternatives',
      'Insecure Storage': 'Implement secure storage mechanisms for sensitive data',
      'Authentication & Authorization': 'Add proper authentication and authorization checks to all endpoints'
    });
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[97]++;
    return /* istanbul ignore next */(cov_1jpkv5el8b().b[22][0]++, descriptions[category]) ||
    /* istanbul ignore next */
    (cov_1jpkv5el8b().b[22][1]++, `Review and fix ${category.toLowerCase()} related issues`);
  }

  /**
   * Get category-specific action items
   */
  getCategoryActionItems(category, vulnerabilities) {
    /* istanbul ignore next */
    cov_1jpkv5el8b().f[27]++;
    const uniqueTypes =
    /* istanbul ignore next */
    (cov_1jpkv5el8b().s[98]++, [...new Set(vulnerabilities.map(v => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[28]++;
      cov_1jpkv5el8b().s[99]++;
      return v.type;
    }))]);
    /* istanbul ignore next */
    cov_1jpkv5el8b().s[100]++;
    return uniqueTypes.map(type => {
      /* istanbul ignore next */
      cov_1jpkv5el8b().f[29]++;
      cov_1jpkv5el8b().s[101]++;
      return {
        action: this.getSpecificRecommendation(type),
        affectedLines: vulnerabilities.filter(v => {
          /* istanbul ignore next */
          cov_1jpkv5el8b().f[30]++;
          cov_1jpkv5el8b().s[102]++;
          return v.type === type;
        }).map(v => {
          /* istanbul ignore next */
          cov_1jpkv5el8b().f[31]++;
          cov_1jpkv5el8b().s[103]++;
          return v.line;
        }),
        severity: vulnerabilities.find(v => {
          /* istanbul ignore next */
          cov_1jpkv5el8b().f[32]++;
          cov_1jpkv5el8b().s[104]++;
          return v.type === type;
        }).severity
      };
    });
  }
}
/* istanbul ignore next */
cov_1jpkv5el8b().s[105]++;
module.exports = new SecurityScanner();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,