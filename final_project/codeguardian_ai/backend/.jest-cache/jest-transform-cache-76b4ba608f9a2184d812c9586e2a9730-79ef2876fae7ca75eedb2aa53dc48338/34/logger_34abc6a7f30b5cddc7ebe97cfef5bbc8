9708b397673b5c03a9274417f237d631
/* istanbul ignore next */
function cov_1ynukautvj() {
  var path = "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/logger.js";
  var hash = "a752940db1f72fea018b8473fa6721df9203e830";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/aldho/poc_aldho/assingment_project_AI/final_project/codeguardian_ai/backend/utils/logger.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "1": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 11
        },
        end: {
          line: 4,
          column: 24
        }
      },
      "3": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "5": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 9,
          column: 45
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "7": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "8": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "9": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "10": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "11": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "12": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "13": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "14": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "15": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "16": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "17": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 86,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 44,
            column: 3
          }
        },
        loc: {
          start: {
            line: 44,
            column: 42
          },
          end: {
            line: 53,
            column: 3
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 61,
            column: 3
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 65,
            column: 12
          }
        },
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 24
          }
        },
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 78,
            column: 7
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 0
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 0
          },
          end: {
            line: 10,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 34
          }
        }, {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 15,
            column: 44
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 25
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 29
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 38
          },
          end: {
            line: 44,
            column: 40
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 13
          },
          end: {
            line: 50,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 50,
            column: 7
          }
        }, {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 14
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 25
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 26
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a752940db1f72fea018b8473fa6721df9203e830"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ynukautvj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ynukautvj();
// Backend Utilities - Logger
const winston =
/* istanbul ignore next */
(cov_1ynukautvj().s[0]++, require('winston'));
const path =
/* istanbul ignore next */
(cov_1ynukautvj().s[1]++, require('path'));
const fs =
/* istanbul ignore next */
(cov_1ynukautvj().s[2]++, require('fs'));

// Ensure logs directory exists
const logsDir =
/* istanbul ignore next */
(cov_1ynukautvj().s[3]++, path.join(__dirname, '..', 'logs'));
/* istanbul ignore next */
cov_1ynukautvj().s[4]++;
if (!fs.existsSync(logsDir)) {
  /* istanbul ignore next */
  cov_1ynukautvj().b[0][0]++;
  cov_1ynukautvj().s[5]++;
  fs.mkdirSync(logsDir, {
    recursive: true
  });
} else
/* istanbul ignore next */
{
  cov_1ynukautvj().b[0][1]++;
}
class Logger {
  constructor() {
    /* istanbul ignore next */
    cov_1ynukautvj().f[0]++;
    cov_1ynukautvj().s[6]++;
    this.logger = winston.createLogger({
      level:
      /* istanbul ignore next */
      (cov_1ynukautvj().b[1][0]++, process.env.LOG_LEVEL) ||
      /* istanbul ignore next */
      (cov_1ynukautvj().b[1][1]++, 'info'),
      format: winston.format.combine(winston.format.timestamp(), winston.format.errors({
        stack: true
      }), winston.format.json()),
      defaultMeta: {
        service: 'codeguardian-ai'
      },
      transports: [new winston.transports.File({
        filename: path.join(logsDir, 'error.log'),
        level: 'error'
      }), new winston.transports.File({
        filename: path.join(logsDir, 'combined.log')
      }), new winston.transports.Console({
        format: winston.format.combine(winston.format.colorize(), winston.format.simple())
      })]
    });
  }
  info(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[2][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[1]++;
    cov_1ynukautvj().s[7]++;
    this.logger.info(message, meta);
  }
  error(message, error =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[3][0]++, null), meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[2]++;
    cov_1ynukautvj().s[8]++;
    this.logger.error(message, {
      error: error ?
      /* istanbul ignore next */
      (cov_1ynukautvj().b[5][0]++, {
        message: error.message,
        stack: error.stack,
        name: error.name
      }) :
      /* istanbul ignore next */
      (cov_1ynukautvj().b[5][1]++, null),
      ...meta
    });
  }
  warn(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[3]++;
    cov_1ynukautvj().s[9]++;
    this.logger.warn(message, meta);
  }
  debug(message, meta =
  /* istanbul ignore next */
  (cov_1ynukautvj().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_1ynukautvj().f[4]++;
    cov_1ynukautvj().s[10]++;
    this.logger.debug(message, meta);
  }

  // Create request logger middleware
  createRequestLogger() {
    /* istanbul ignore next */
    cov_1ynukautvj().f[5]++;
    cov_1ynukautvj().s[11]++;
    return (req, res, next) => {
      /* istanbul ignore next */
      cov_1ynukautvj().f[6]++;
      const start =
      /* istanbul ignore next */
      (cov_1ynukautvj().s[12]++, Date.now());
      /* istanbul ignore next */
      cov_1ynukautvj().s[13]++;
      res.on('finish', () => {
        /* istanbul ignore next */
        cov_1ynukautvj().f[7]++;
        const duration =
        /* istanbul ignore next */
        (cov_1ynukautvj().s[14]++, Date.now() - start);
        /* istanbul ignore next */
        cov_1ynukautvj().s[15]++;
        this.info('HTTP Request', {
          method: req.method,
          url: req.originalUrl,
          statusCode: res.statusCode,
          duration: `${duration}ms`,
          userAgent: req.get('User-Agent'),
          ip: req.ip
        });
      });
      /* istanbul ignore next */
      cov_1ynukautvj().s[16]++;
      next();
    };
  }
}

// Export singleton instance
/* istanbul ignore next */
cov_1ynukautvj().s[17]++;
module.exports = new Logger();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,